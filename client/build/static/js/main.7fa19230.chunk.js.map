{"version":3,"sources":["Assets/Images/Logo/logo.jpg","Component/PageLoader.tsx","Services/Actions/PageActions.ts","Component/Transitions/SlideTransition.tsx","Component/PagePrompt.tsx","Component/PageSnackbar.tsx","Component/PageSuccessPrompt.tsx","Helpers/AppConfig.ts","Hooks/UseFetch.ts","Services/Api/UserApi.ts","Services/Actions/UserActions.ts","Component/LoadingButton/styles.ts","Component/LoadingButton/index.tsx","Views/LoginPortal/FieldPassword.tsx","Views/LoginPortal/FieldUsername.tsx","Views/LoginPortal/styles.ts","Views/LoginPortal/LoginPortal.tsx","Hooks/UseDebounce.ts","Component/CustomAvatar.tsx","Component/Formik/FormikAutocomplete.tsx","Helpers/helperErrorMessage.ts","Services/Api/BrgyOfficialApi.ts","Storage/LocalDatabase.ts","Views/AdminViews/BrgyOfficialAdminView/AddBrgyOfficialAdminView.tsx","Services/Actions/BrgyOfficialActions.ts","Component/DataTableSearch.tsx","Component/DataTableSort.tsx","Component/LinearLoadingProgress.tsx","Hooks/UseDateParser.ts","Hooks/useFilter.ts","Views/AdminViews/BrgyOfficialAdminView/DataTableBrgyOfficialAdminView.tsx","Component/Formik/FormikInputField.tsx","Component/Formik/FormikRadio.tsx","Component/Mask/MaskedPhoneNumber.tsx","Component/PhotoField/PhotoField.tsx","Helpers/helpGetRegexValidators.ts","Hooks/UseFileConverter.ts","Services/Api/AdminApi.ts","Views/AdminViews/CoAdminView/AddCoAdminView.tsx","Services/Actions/AdminActions.ts","Views/AdminViews/CoAdminView/DataTableCoAdminView.tsx","Component/IconButtonPopper/IconButtonPopper.tsx","Services/Api/NewsApi.ts","Services/Actions/NewsActions.ts","Component/CustomStepper/CustomStepper.tsx","Component/FormDialog/FormDialog.tsx","Component/HookForm/DropzoneFieldHookForm.tsx","Component/HookForm/MultiRadioFieldHookForm.tsx","Component/HookForm/TextFieldHookForm.tsx","Views/AdminViews/NewsAdminView/AddNewsAdminView.tsx","Views/AdminViews/NewsAdminView/styles.ts","Views/AdminViews/NewsAdminView/DtNewsAdminView.tsx","Services/Api/ResidentApi.ts","Views/AdminViews/ResidentAdminView/AddResidentAdminView.tsx","Services/Actions/ResidentActions.ts","Views/AdminViews/ResidentAdminView/DataTableResidentAdminView.tsx","Routes/AdminRoutes.tsx","Routes/Layout/Body.tsx","Component/Message/styles.ts","Component/Message/Message.tsx","Component/Notification/styles.ts","Component/Notification/Notification.tsx","Component/PageLinks.tsx","Component/SettingMenu/styles.ts","Component/SettingMenu/SettingMenu.tsx","Routes/Layout/Header.tsx","Component/NavLinks/NavSidebarDropDown.tsx","Component/UserProfile/styles.ts","Component/UserProfile/UserProfile.tsx","Routes/Layout/MobileSidebar.tsx","Routes/Layout/Layout.tsx","Routes/Routes.tsx","Services/Reducers/UserReducer.ts","Services/Reducers/PageReducer.ts","Services/Reducers/AdminReducer.ts","Services/Reducers/ResidentReducer.ts","Services/Reducers/BrgyOfficialReducer.ts","Services/Reducers/NewsReducer.ts","Services/Reducers/RootReducer.ts","Services/Store.ts","Theme/MuiTheme.tsx","App.tsx","index.tsx"],"names":["module","exports","PageLoader","memo","theme","useTheme","useSelector","state","PageReducer","page_loading","show","loading_message","Backdrop","style","zIndex","modal","color","display","gridAutoFlow","gridGap","open","CircularProgress","Typography","variant","setGeneralPrompt","promptSettings","dispatch","a","type","page_prompt","resetGeneralPrompt","custom_title","custom_subtitle","continue_callback","close_callback","setPageLinks","links","page_links","SlideTransition","React","forwardRef","props","ref","Slide","direction","PagePrompt","useDispatch","handleContinue","useCallback","handleCancel","StyledPagePrompt","scroll","disableBackdropClick","onEscapeKeyDown","TransitionComponent","PaperProps","margin","padding","borderRadius","width","overflowY","DialogContent","className","fontWeight","fontSize","DialogActions","Button","disableElevation","onClick","styled","Dialog","PageSnackbar","enqueueSnackbar","useSnackbar","page_snackbar","message","options","useEffect","mounted","Transition","PageSuccessPrompt","page_success_prompt","store","StyledSuccessDialog","disableEscapeKeyDown","DialogTitle","justifyItems","justifyContent","marginTop","Avatar","height","backgroundColor","gutterBottom","action_buttons","map","b","i","key","payload","handleClick","text","getAccessToken","token","temp_storage","localStorage","getItem","process","JSON","parse","access_token","error","removeToken","removeItem","Axios","axios","create","PostFetch","endpoint","data","post","headers","Authorization","serverResponse","success","isRefreshing","refreshSubscribers","interceptors","response","use","config","status","originalRequest","refresh_token","getRefreshToken","method","url","qs","stringify","grant_type","then","catch","err","Promise","resolve","reject","subscribeTokenRefresh","cb","push","CurrentUserApi","API_DEFAULT_ROUTE","console","log","LoginApi","SetCurrentUserAction","isLoading","user","user_type","window","location","pathname","href","StyledLoadingButton","div","LoadingButton","disabled","loading","size","fullWidth","children","FieldPassword","showPassword","handleTogglePassword","useField","name","field","FormControl","InputLabel","htmlFor","OutlinedInput","id","startAdornment","InputAdornment","position","endAdornment","IconButton","labelWidth","FieldUsername","autoFocus","LoginStyles","Paper","authFormValues","p","src","email","password","LoginPortal","useState","setShowPassword","isAuthenticating","setIsAuthenticating","authError","setAuthError","useHistory","prevState","handleSubmit","values","formikHelpers","setItem","resetForm","gridArea","app_logo","alt","textAlign","fontFamily","Alert","severity","initialValues","onSubmit","to","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","CustomAvatar","errorMessage","spacing","palette","primary","main","secondary","contrastText","textTransform","letterSpacing","FormikAutocomplete","label","optKeyId","optKeyLabel","inputFieldName","selectFieldName","endPoint","rows","multiline","required","placeholder","setOptions","inputField","inputMeta","inputArgs","errorText","touched","setLoading","selectField","selectArgs","debouncedSearchTerm","fetchData","setValue","Autocomplete","filterSelectedOptions","loadingText","getOptionLabel","option","renderOption","picture","charAt","onChange","event","newValue","toString","inputValue","onInputChange","newInputValue","filterOptions","renderInput","params","TextField","helperText","InputLabelProps","shrink","helperErrorMessage","onError","errors","forEach","getBrgyOfficialDataTableApi","addBarangayOfficialApi","DbCivilStatus","DbReligion","DbNationality","DbBrgyOfficialPositions","initFormValues","resident_pk","resident_name","formSchema","yup","max","AddBrgyOfficialAdminView","history","formRef","useRef","handleFormSubmit","formValues","helpers","onSuccess","msg","BrgyOfficialApi","link","title","Container","maxWidth","validationSchema","validateOnChange","validateOnBlur","innerRef","setFieldValue","Grid","container","xs","item","select","e","target","MenuItem","justify","DataTableSearch","searchField","handleSetSearchField","minWidth","DataTableSort","selectedSortIndex","handleChagenSelectedSortIndex","initialTableSort","alignItems","alignContent","sort","index","LinearLoadingProgress","opacity","LinearProgress","InvalidDateToDefault","date","defaultString","d","moment","format","toLowerCase","useFilter","defaultSearch","initialLimit","tableSearch","setTableSearch","setSearchField","tableLimit","setTableLimit","tablePage","setTablePage","tableCount","setTableCount","length","setSelectedSortIndex","activeSort","setActiveSort","handleSetTableSearch","newState","handleSetLimit","newLimit","handleSetPage","newPage","handleChangePage","newCount","page","handleChangeRowsPerPage","parseInt","foundSortItem","generateSearchFilters","initialSearch","search","column","tableColumns","align","DataTableBrgyOfficialAdminView","table_loading","BrgyOfficialReducer","fetching_brgy_official_data_table","data_table","brgy_official_data_table","table","begin","limit","filters","fetchTableData","md","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","onChangeRowsPerPage","preventDefault","overflowX","TableContainer","minHeight","Table","stickyHeader","TableHead","TableRow","col","TableCell","TableBody","colSpan","row","pic","first_name","last_name","middle_name","suffix","gender","Chip","sts_backgroundColor","sts_color","sts_desc","InvalidDateTimeToDefault","encoded_at","FormikInputField","meta","FormikRadio","FormLabel","transform","transformOrigin","RadioGroup","aria-label","FormControlLabel","control","Radio","FormHelperText","MaskedPhoneNumber","inputRef","other","inputElement","mask","showMask","guide","PhotoField","selectedFile","handleChange","preview","setPreview","onSelectFile","files","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","marginBottom","StyledImageField","overlap","anchorOrigin","vertical","horizontal","badgeContent","Tooltip","border","accept","boxShadow","Badge","validateEmail","fileToBase64","blob","reader","FileReader","readAsBinaryString","onload","result","btoa","onerror","getAdminDataTableApi","addAdminApi","firstname","lastname","phone","matches","AddCoAdminView","setPic","handleSetPic","logo","sm","InputProps","inputComponent","DataTableCoAdminView","AdminReducer","fetching_admin_data_table","admin_data_table","admin_pk","IconButtonPopper","buttonColor","iconColor","buttons","anchorEl","setAnchorEl","handleClose","Boolean","aria-describedby","currentTarget","Popover","onClose","PopperContent","btn","startIcon","Icon","getNewsDataTable","addNews","updateNews","republishNews","news_pk","unpublishNews","getSingleNews","addNewsComment","addNewsReaction","updateNewsReaction","fetch_news_table","NewsApi","news_table","successCallback","QontoConnector","withStyles","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","StepConnector","useQontoStepIconStyles","makeStyles","root","circle","QontoStepIcon","classes","clsx","useStyles","createStyles","button","marginRight","instructions","CustomStepper","steps","active_step","Stepper","activeStep","connector","step","Step","StepLabel","StepIconComponent","gridTemplateAreas","transition","View","FormDialog","body","actions","descriptionElementRef","mobile","useMediaQuery","breakpoints","down","radResultNo","useParams","descriptionElement","current","focus","DialogTitleStyle","disableTypography","DialogContentStyle","DialogActionsStyle","dark","common","white","cursor","icon","DropzoneFieldHookForm","useFormContext","styles","error_message","hasOwnProperty","defaultValue","render","onBlur","onDrop","getRootProps","getInputProps","List","f","ListItem","ListItemIcon","ListItemText","MultiRadioFieldHookForm","invalid","isTouched","isDirty","radio_items","radio","TextFieldHookForm","AddNewsAdminView","open_add_news_dialog","set_open_add_news_dialog","set_active_step","audience","upload_files","form_payload","set_form_payload","validate_main_details","form_add_news","useForm","resolver","yupResolver","defaultValues","mode","handleSetOpenNewsDialog","Steps","handleSubmitForm","NewsActions","reset","prev_active_step","prev","getValues","noValidate","prevActiveStep","form","StyledNewsContainer","DtNewsAdminView","NewsReducer","RenderNewsAction","news","sts_pk","user_pic","user_full_name","fromNow","getResidentDataTableApi","addResidentApi","updateResidentApi","getSingleResident","birth_date","nationality","religion","civil_status","dialect","tribe","with_disability","purok","is_employed","employment","house_income","house_status","voting_precinct","house_ownership","nullable","AddResidentAdminView","ResidentApi","utils","DateFnsUtils","toDate","animateYearScrolling","disableFuture","inputVariant","autoOk","Divider","DataTableResidentAdminView","ResidentReducer","fetch_resident_data_table","resident_data_table","SysAdminRoutes","path","exact","Body","isOpenMobileHeader","StyledBody","marginLeft","sidebar","header","StyledMessage","StyledMessagePopOver","Message","showZero","StyledNotification","StyledNotificationPopOver","Notification","PageLinks","StyledPageLinks","Breadcrumbs","v","StyledTaskMenu","StyledTaskMenuPopOver","SettingMenu","Header","PageNavLinks","handleToggleSidebar","handleToggleHeader","isOpenMobileSidebar","StyledHeader","AppBar","lg","StyledNavSidebarDropdown","NavSidebarDropDown","isActive","navLinks","setOpen","Collapse","in","activeClassName","StyledUserProfile","UserProfile","full_name","MobileSidebar","handleCloseMobileSidebar","StyledMobileSidebar","nav","hasSubLinks","includes","parentKey","Drawer","generateNavLinks","Layout","reducers","UserReducer","setIsOpenMobileHeader","prevHeader","setIsOpenMobileSidebar","prevSidebar","Routes","getUserInfo","defaultState","userLoading","action","fetching_selected_admin","selected_admin","fetching_selected_resident","selected_resident","fetch_selected_resident","fetching_selected_brgy_official","selected_brgy_official","single_news","fetch_single_news","RootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","createMuiTheme","typography","join","responsiveFontSizes","App","notistackRef","createRef","maxSnack","autoHideDuration","hideIconVariant","closeSnackbar","ReactDOM","document","getElementById"],"mappings":"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SAAChJ,GACzBnH,EAAS,CACPE,KAAM,oBACN8C,cAAe,CACbC,QAAQ,IAAD,OAAMkE,EAAN,KACPjE,QAAS,CACPrD,QAAS,eAKM,oBAAZoQ,GACTA,KCJW,IACbG,4BAvB+B,uCAAG,WAClC5L,GADkC,eAAAvE,EAAA,sEAGXyF,GACrBiC,wCACAnD,GALgC,cAG5B6B,EAH4B,OAQlCuB,QAAQC,IAAR,WAAwBxB,GARU,kBAS3BA,GAT2B,2CAAH,sDAwB/BgK,uBAZ0B,uCAAG,WAC7B7L,GAD6B,eAAAvE,EAAA,sEAGNyF,GACrBiC,mCACAnD,GAL2B,cAGvB6B,EAHuB,yBAOtBA,GAPsB,2CAAH,uDCnBfiK,GAAgB,CAC3B,WACA,WACA,UACA,UACA,SACA,SAGWC,GAAa,CACxB,WACA,MACA,YACA,WACA,WACA,UACA,UACA,WACA,cACA,aACA,YACA,cACA,OACA,QACA,MACA,cACA,QACA,KACA,UACA,UACA,SACA,WACA,aACA,YACA,WACA,OACA,SACA,OACA,eACA,aACA,WACA,aACA,cACA,OACA,YACA,MACA,WACA,aACA,OACA,MACA,YACA,cACA,UACA,mBACA,kBACA,MACA,QACA,UACA,OACA,OACA,2BACA,MACA,MACA,gBACA,oBACA,YACA,WACA,OACA,cACA,cACA,4BACA,MACA,mBACA,OACA,MACA,wBACA,MACA,SACA,YACA,gBACA,kBACA,OACA,WACA,QACA,mBACA,WACA,SACA,UACA,cAGWC,GAAgB,CAC3B,cACA,WACA,aACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,QACA,WACA,aACA,iBACA,cACA,cACA,SACA,SACA,QACA,YACA,SACA,aACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,QACA,cACA,gBACA,UACA,QACA,SACA,cAGWC,GAA0B,CACrC,UACA,YACA,YACA,kBACA,kBACA,iBACA,iBCrHIC,GAAwC,CAC5CC,YAAa,KACbC,cAAe,GACfhH,SAAU,MAGNiH,GAAaC,KAAW,CAC5BH,YAAaG,OAAalD,WAAWmD,I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","file":"static/js/main.7fa19230.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ddb1f8c7.jpg\";","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\ninterface IPageLoader {}\r\n\r\nexport const PageLoader: FC<IPageLoader> = memo(() => {\r\n  const theme = useTheme();\r\n\r\n  const { show, loading_message } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_loading\r\n  );\r\n\r\n  return (\r\n    <Backdrop\r\n      style={{\r\n        zIndex: theme.zIndex.modal + 100,\r\n        color: \"#fff\",\r\n        display: \"grid\",\r\n        gridAutoFlow: \"column\",\r\n        gridGap: \"1em\",\r\n      }}\r\n      open={show}\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n      <Typography variant=\"subtitle1\">{loading_message}</Typography>\r\n    </Backdrop>\r\n  );\r\n});\r\n\r\nexport default PageLoader;\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  PagePromptTypes,\r\n  PageReducerTypes,\r\n  PageLoadingTypes,\r\n  PageLinkTypes,\r\n  PageSuccessPromptTypes,\r\n} from \"../Types/PageTypes\";\r\n\r\nexport const setGeneralPrompt = (promptSettings: PagePromptTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: promptSettings,\r\n  });\r\n};\r\n\r\nexport const resetGeneralPrompt = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: {\r\n      open: false,\r\n      custom_title: null,\r\n      custom_subtitle: null,\r\n      continue_callback: null,\r\n      close_callback: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const showPageLoading = (loadingSetting: PageLoadingTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  const { loading_message } = loadingSetting;\r\n\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: true,\r\n      loading_message: loading_message\r\n        ? loading_message\r\n        : \"We are processing your request, thank you for your patience.\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const closePageLoading = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: false,\r\n      loading_message: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageLinks = (links: Array<PageLinkTypes>) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LINKS\",\r\n    page_links: links,\r\n  });\r\n};\r\n\r\nexport const setSnackbar = (\r\n  msg: string,\r\n  type: \"error\" | \"success\" | \"warning\"\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SNACKBAR\",\r\n    page_snackbar: {\r\n      message: msg,\r\n      options: {\r\n        variant: type,\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageSuccessPromptAction = (\r\n  payload: PageSuccessPromptTypes\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SUCCESS_PROMPT\",\r\n    page_success_prompt: payload,\r\n  });\r\n};\r\n","import { Slide } from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport React from \"react\";\r\n\r\ninterface ISlideTransition {}\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default SlideTransition;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { resetGeneralPrompt } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport SlideTransition from \"./Transitions/SlideTransition\";\r\ninterface IPagePrompt {}\r\n\r\nexport const PagePrompt: FC<IPagePrompt> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    open,\r\n    custom_title,\r\n    custom_subtitle,\r\n    continue_callback,\r\n    close_callback,\r\n  } = useSelector((state: RootStore) => state.PageReducer.page_prompt);\r\n\r\n  const handleContinue = useCallback(() => {\r\n    if (continue_callback) {\r\n      dispatch(resetGeneralPrompt());\r\n\r\n      if (typeof continue_callback === \"function\") {\r\n        continue_callback();\r\n      }\r\n    }\r\n  }, [continue_callback, dispatch]);\r\n  const handleCancel = useCallback(() => {\r\n    dispatch(resetGeneralPrompt());\r\n    if (close_callback) {\r\n      if (typeof close_callback === \"function\") {\r\n        close_callback();\r\n      }\r\n    }\r\n  }, [close_callback, dispatch]);\r\n\r\n  return (\r\n    <StyledPagePrompt\r\n      open={open}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      onEscapeKeyDown={() => {\r\n        handleCancel();\r\n      }}\r\n      TransitionComponent={SlideTransition}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogContent className=\"dialog-content\">\r\n        <div\r\n          style={{\r\n            fontWeight: 900,\r\n            fontSize: `1.5em`,\r\n            color: `red`,\r\n          }}\r\n        >\r\n          {custom_title\r\n            ? custom_title\r\n            : \"Are you sure that you want to continue?\"}\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions className=\"dialog-actions\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={handleContinue}\r\n        >\r\n          Proceed\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          onClick={handleCancel}\r\n          disableElevation\r\n        >\r\n          Dismiss\r\n        </Button>\r\n      </DialogActions>\r\n    </StyledPagePrompt>\r\n  );\r\n});\r\n\r\nexport default PagePrompt;\r\n\r\nconst StyledPagePrompt = styled(Dialog)`\r\n  .dialog-content {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import { useSnackbar } from \"notistack\";\r\nimport { memo, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst PageSnackbar = memo(() => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { message, options } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_snackbar\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const triggerSnackbar = () => {\r\n      if (message) {\r\n        if (options) {\r\n          enqueueSnackbar(message, { ...options });\r\n        } else {\r\n          enqueueSnackbar(message);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && triggerSnackbar();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enqueueSnackbar, message, options]);\r\n\r\n  return null;\r\n});\r\n\r\nexport default PageSnackbar;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport React, { memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setPageSuccessPromptAction } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst Transition: any = React.forwardRef(function Transition(\r\n  props: any,\r\n  ref: any\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const PageSuccessPrompt = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const page_success_prompt = useSelector(\r\n    (store: RootStore) => store.PageReducer.page_success_prompt\r\n  );\r\n\r\n  return (\r\n    <StyledSuccessDialog\r\n      open={page_success_prompt?.show ? page_success_prompt?.show : false}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      disableEscapeKeyDown={true}\r\n      TransitionComponent={Transition}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"-50px\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              height: \"3.5em\",\r\n              width: \"3.5em\",\r\n              backgroundColor: \"#8bc34a\",\r\n            }}\r\n          >\r\n            <CheckRoundedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className=\"dialog-content\">\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Successful!\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            fontSize: `1rem`,\r\n            fontWeight: 900,\r\n            color: `#2196f3`,\r\n          }}\r\n        >\r\n          {page_success_prompt?.message}\r\n        </div>\r\n      </DialogContent>\r\n      <div className=\"dialog-actions\">\r\n        <small>What do you want to do next?</small>\r\n\r\n        {page_success_prompt?.action_buttons?.map((b, i) => (\r\n          <Button\r\n            key={i}\r\n            color={b.color}\r\n            disableElevation={false}\r\n            onClick={() => {\r\n              if (typeof b.handleClick === \"function\") {\r\n                dispatch(\r\n                  setPageSuccessPromptAction({\r\n                    show: false,\r\n                  })\r\n                );\r\n                b.handleClick();\r\n              }\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontWeight: 700,\r\n                fontSize: `.9em`,\r\n              }}\r\n            >\r\n              {b.text}\r\n            </span>\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </StyledSuccessDialog>\r\n  );\r\n});\r\n\r\nexport default PageSuccessPrompt;\r\n\r\nconst StyledSuccessDialog = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-top: -15px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n  .dialog-actions {\r\n    margin: 1em;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    width: 100%;\r\n    justify-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","export const APP_NAME: any = process.env.REACT_APP_NAME;\r\n\r\nexport const getAccessToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).access_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const getRefreshToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).refresh_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(APP_NAME);\r\n};\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport qs from \"qs\";\r\nimport {\r\n  APP_NAME,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  removeToken,\r\n} from \"../Helpers/AppConfig\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\n\r\nexport const Axios: AxiosInstance = axios.create();\r\n\r\nexport const GetFetch = async (endpoint: string): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.get(`/` + endpoint, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getAccessToken()}`,\r\n      },\r\n    });\r\n\r\n    console.log(`response`, serverResponse);\r\n\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Client error has occured. ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nexport const PostFetch = async (\r\n  endpoint: string,\r\n  data: any\r\n): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.post(\r\n      `/` + endpoint,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Client error has occured. ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers: Array<any> = [];\r\n\r\nAxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const {\r\n      config,\r\n      response: { status },\r\n    } = error;\r\n    const originalRequest = config;\r\n\r\n    if (status === 409) {\r\n      removeToken();\r\n      // window.location.href = \"/login\";\r\n    }\r\n\r\n    if (status === 401) {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n\r\n        const refresh_token = getRefreshToken();\r\n\r\n        if (refresh_token) {\r\n          axios({\r\n            method: \"post\",\r\n            url: `/api/token`,\r\n            data: qs.stringify({\r\n              grant_type: \"refresh_token\",\r\n              refresh_token: refresh_token,\r\n            }),\r\n            headers: {\r\n              \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              // localStorage.setItem(\r\n              //   APP_NAME,\r\n              //   JSON.stringify({\r\n              //     access_token: response.data.access_token,\r\n              //     refresh_token: response.data.refresh_token,\r\n              //   })\r\n              // );\r\n              // isRefreshing = false;\r\n              // onRrefreshed(response.data.access_token);\r\n              // refreshSubscribers = [];\r\n            })\r\n            .catch((err) => {\r\n              // localStorage.removeItem(APP_NAME);\r\n              removeToken();\r\n              // alert(\r\n              //   `Ops, it seems that your session is no longer valid. Please login again.`\r\n              // );\r\n              // window.location.href = \"/login\";\r\n            });\r\n        } else {\r\n          // window.location.href = \"/login\";\r\n        }\r\n      }\r\n\r\n      const retryOrigReq = new Promise((resolve, reject) => {\r\n        subscribeTokenRefresh((token: any) => {\r\n          originalRequest.headers[\"Authorization\"] = \"Bearer \" + token;\r\n          resolve(axios(originalRequest));\r\n        });\r\n      });\r\n      return retryOrigReq;\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst subscribeTokenRefresh = (cb: any) => {\r\n  refreshSubscribers.push(cb);\r\n};\r\n\r\nconst onRrefreshed = (token: string) => {\r\n  refreshSubscribers.map((cb) => cb(token));\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserLogin } from \"../Models/UserModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/user/`;\r\n\r\nexport const CurrentUserApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"currentUser\", null);\r\n  console.log(`repsonse`, response);\r\n  return response;\r\n};\r\n\r\nexport const LoginApi = async (\r\n  payload: UserLogin\r\n): Promise<IServerResponse> => {\r\n  console.log(`payload`);\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"login\", payload);\r\n  return response;\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { CurrentUserApi } from \"../Api/UserApi\";\r\nimport IUserAuthenticate from \"../Interface/IAuth\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserActionTypes } from \"../Reducers/UserReducer\";\r\n\r\ninterface IActionAuthenticateUser {\r\n  user: IUserAuthenticate;\r\n  resetForm: () => void;\r\n}\r\n\r\nexport const SetCurrentUserAction = () => async (\r\n  dispatch: Dispatch<UserActionTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_LOADING_USER\",\r\n      isLoading: true,\r\n    });\r\n    const response: IServerResponse = await CurrentUserApi();\r\n    dispatch({\r\n      type: \"SET_LOADING_USER\",\r\n      isLoading: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_CURRENT_USER\",\r\n        user: response.data,\r\n      });\r\n\r\n      const user_type = response?.data?.user_type;\r\n\r\n      if (window.location.pathname === \"/login\") {\r\n        if (user_type === \"admin\") {\r\n          window.location.href = \"/admin/calendar\";\r\n        } else if (user_type === \"tutor\") {\r\n          window.location.href = \"/tutor/calendar\";\r\n        } else if (user_type === \"student\") {\r\n          window.location.href = \"/student/calendar\";\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  } catch (error) {}\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoadingButton = styled.div`\r\n  display: grid;\r\n  grid-template-areas: \"combine\";\r\n  .btn {\r\n    grid-area: combine;\r\n  }\r\n  .loader {\r\n    font-weight: 900;\r\n    font-size: 2em;\r\n    z-index: 10;\r\n    grid-area: combine;\r\n    justify-self: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { StyledLoadingButton } from \"./styles\";\r\n\r\ninterface IProps {\r\n  // className :\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\r\n  variant: \"text\" | \"outlined\" | \"contained\" | undefined;\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  handleClick?: () => void;\r\n  fullWidth: boolean;\r\n  className?: string | undefined;\r\n  borderRadius?: number | string;\r\n}\r\n\r\nconst LoadingButton: React.FC<IProps> = ({\r\n  type,\r\n  color,\r\n  disabled,\r\n  loading,\r\n  variant,\r\n  handleClick,\r\n  size,\r\n  fullWidth,\r\n  className,\r\n  children,\r\n  borderRadius,\r\n}) => {\r\n  return (\r\n    <StyledLoadingButton>\r\n      <Button\r\n        className={`btn ${className}`}\r\n        type={type}\r\n        color={color}\r\n        variant={variant}\r\n        size={size}\r\n        disabled={disabled || loading}\r\n        onClick={handleClick}\r\n        fullWidth={fullWidth}\r\n        disableElevation\r\n        style={{\r\n          borderRadius: borderRadius,\r\n        }}\r\n      >\r\n        {children}\r\n      </Button>\r\n      {loading && <CircularProgress size={22} className=\"loader\" />}\r\n    </StyledLoadingButton>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\r\nimport VpnKeyRoundedIcon from \"@material-ui/icons/VpnKeyRounded\";\r\n\r\ninterface IFieldPassword {\r\n  showPassword: boolean;\r\n  handleTogglePassword: () => void;\r\n}\r\n\r\nexport const FieldPassword: FC<IFieldPassword> = memo(\r\n  ({ showPassword, handleTogglePassword }) => {\r\n    const [field] = useField({ name: \"password\" });\r\n    return (\r\n      <FormControl fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Password</InputLabel>\r\n        <OutlinedInput\r\n          style={{ borderRadius: `25px` }}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          id=\"outlined-adornment-amount\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <VpnKeyRoundedIcon fontSize=\"small\" />\r\n            </InputAdornment>\r\n          }\r\n          endAdornment={\r\n            <div>\r\n              {showPassword ? (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityOffRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              )}\r\n            </div>\r\n          }\r\n          labelWidth={76}\r\n          {...field}\r\n        />\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FieldPassword;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\ninterface IFieldUsername {}\r\n\r\nexport const FieldUsername: FC<IFieldUsername> = memo(() => {\r\n  const [field] = useField({ name: \"email\" });\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\">\r\n      <InputLabel htmlFor=\"outlined-adornment-amount\">Email Address</InputLabel>\r\n      <OutlinedInput\r\n        style={{ borderRadius: `25px` }}\r\n        id=\"outlined-adornment-amount\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <PersonRoundedIcon fontSize=\"small\" />\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={110}\r\n        {...field}\r\n        autoFocus={true}\r\n      />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default FieldUsername;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginStyles = styled(Paper)`\r\n  min-height: 100vh;\r\n  min-width: 100vw;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-areas: \"login\";\r\n\r\n  background: #ece9e6; /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(\r\n    to right,\r\n    #ffffff,\r\n    #ece9e6\r\n  ); /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(\r\n    to right,\r\n    #ffffff,\r\n    #ece9e6\r\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n  .login-container {\r\n    align-self: center;\r\n    justify-self: center;\r\n    display: grid;\r\n    box-shadow: 0 7px 15px rgba(0, 0, 0, 0.1);\r\n    z-index: 2;\r\n    /* grid-gap: 1em; */\r\n    border-radius: 10px !important;\r\n    padding: 1em !important;\r\n    grid-auto-columns: 1fr;\r\n    background-color: #fff !important;\r\n    min-height: auto;\r\n    align-self: start;\r\n    align-self: center !important;\r\n    width: 400px !important;\r\n    .form-ctnr {\r\n      display: grid;\r\n      /* justify-content: center; */\r\n      align-items: start;\r\n      align-content: start;\r\n      /* grid-gap: 1em; */\r\n      padding: 1em;\r\n      /* padding-top: 0; */\r\n\r\n      .header {\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n        justify-items: center;\r\n        /* text-align: center; */\r\n\r\n        .brand-logo {\r\n          height: 150px;\r\n          width: 150px;\r\n        }\r\n        .brand-name {\r\n          font-weight: 600;\r\n          font-size: 0.87;\r\n          font-weight: 900;\r\n        }\r\n        .brand-caption {\r\n          font-weight: 600;\r\n          font-size: 0.8em;\r\n        }\r\n      }\r\n\r\n      .error {\r\n        /* display: grid;\r\n        grid-auto-flow: column;\r\n        justify-items: start;\r\n        justify-content: start;\r\n        align-items: center; */\r\n      }\r\n\r\n      .body {\r\n        margin: 1em 0;\r\n        display: grid;\r\n        grid-gap: 1em;\r\n        align-content: start;\r\n\r\n        .body-title {\r\n          /* text-align: center; */\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          /* justify-content: center; */\r\n          justify-items: start;\r\n          align-items: center;\r\n          font-size: 0.87em;\r\n          font-weight: 500;\r\n          color: rgba(0, 0, 0, 0.7);\r\n        }\r\n\r\n        .form {\r\n          display: grid;\r\n          grid-gap: 1em;\r\n          align-content: start;\r\n          align-items: start;\r\n\r\n          .buttons {\r\n            display: grid;\r\n            grid-auto-flow: row;\r\n            grid-gap: 0.5em;\r\n            .submit-btn {\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer {\r\n        margin-top: 1em;\r\n        border-top: 1px solid black;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        grid-gap: 0.4em;\r\n        .title {\r\n          justify-self: center;\r\n          background-color: #ecfffb;\r\n          margin-top: -10px;\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          padding: 0 0.5em;\r\n        }\r\n\r\n        .forgetpass {\r\n          justify-self: center;\r\n          align-self: center;\r\n          padding: 0;\r\n          font-size: 0.7rem;\r\n          &:hover {\r\n            color: blue !important;\r\n          }\r\n\r\n          a {\r\n            color: #333 !important;\r\n            text-decoration: none !important;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImageBackground = styled.div<{ src: any }>`\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4)),\r\n    url(\"${(p: any) => p.src}\") no-repeat center center;\r\n  opacity: 0;\r\n  background-size: cover;\r\n  margin-left: 0;\r\n\r\n  transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -webkit-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -moz-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -o-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  .app-name {\r\n    display: grid;\r\n    align-content: end;\r\n    align-items: end;\r\n    text-shadow: 0 3px 0 black;\r\n    color: #fff;\r\n    padding: 0.5em;\r\n    font-size: 2.1em;\r\n    font-weight: 900;\r\n    text-align: center;\r\n    letter-spacing: 1pt;\r\n    word-spacing: 1pt;\r\n    opacity: 0.9;\r\n  }\r\n  &.active {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport app_logo from \"../../Assets/Images/Logo/logo.jpg\";\r\nimport LoadingButton from \"../../Component/LoadingButton\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { SetCurrentUserAction } from \"../../Services/Actions/UserActions\";\r\nimport { LoginApi } from \"../../Services/Api/UserApi\";\r\nimport { UserLogin } from \"../../Services/Models/UserModels\";\r\nimport FieldPassword from \"./FieldPassword\";\r\nimport FieldUsername from \"./FieldUsername\";\r\nimport { LoginStyles } from \"./styles\";\r\n\r\ninterface ILoginPortal {}\r\n\r\nconst authFormValues: UserLogin = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const LoginPortal: FC<ILoginPortal> = memo(() => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\r\n  const [authError, setAuthError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleTogglePassword = useCallback(() => {\r\n    setShowPassword((prevState) => !prevState);\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: UserLogin, formikHelpers: FormikHelpers<UserLogin>) => {\r\n      setIsAuthenticating(true);\r\n      const response = await LoginApi(values);\r\n      setIsAuthenticating(false);\r\n      if (response.success) {\r\n        localStorage.setItem(\r\n          APP_NAME,\r\n          JSON.stringify({\r\n            access_token: response.data.token,\r\n          })\r\n        );\r\n        dispatch(SetCurrentUserAction());\r\n      } else {\r\n        if (typeof response.message === \"string\") {\r\n          setAuthError(response.message);\r\n        }\r\n        formikHelpers.resetForm();\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <LoginStyles theme={theme}>\r\n      <div style={{ gridArea: \"login\" }} className=\"login-container\">\r\n        <div className=\"form-ctnr\">\r\n          <section className=\"header\">\r\n            <Avatar className=\"brand-logo\" src={app_logo} alt=\"\" />\r\n            <div\r\n              style={{\r\n                fontSize: \"1.4em\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Nunito\",\r\n                fontWeight: 900,\r\n                padding: `.5em 0`,\r\n              }}\r\n            >\r\n              {process.env.REACT_APP_CLIENT}\r\n            </div>\r\n\r\n            <div className=\"brand-name\">{process.env.REACT_APP_NAME}</div>\r\n            <div className=\"brand-caption\">\r\n              {process.env.REACT_APP_PROVIDER}\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"body\">\r\n            <div className=\"body-title\">\r\n              You can sign into your account here\r\n            </div>\r\n\r\n            {!!authError && (\r\n              <Alert variant=\"filled\" className=\"error\" severity=\"error\">\r\n                {authError}\r\n              </Alert>\r\n            )}\r\n\r\n            <Formik initialValues={authFormValues} onSubmit={handleSubmit}>\r\n              <Form className=\"form\">\r\n                <FieldUsername />\r\n                <FieldPassword\r\n                  showPassword={showPassword}\r\n                  handleTogglePassword={handleTogglePassword}\r\n                />\r\n\r\n                {/* <NavLink to=\"/login\" className=\"forgetpass\">\r\n                  <div className=\"forget-text\">\r\n                    Let us help you if you <span>forgot your password?</span>\r\n                  </div>\r\n                </NavLink> */}\r\n                <div className=\"buttons\">\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    variant=\"contained\"\r\n                    // disableElevation\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    loading={isAuthenticating}\r\n                    fullWidth={true}\r\n                    borderRadius={`50px`}\r\n                  >\r\n                    Log in\r\n                  </LoadingButton>\r\n                </div>\r\n              </Form>\r\n            </Formik>\r\n          </section>\r\n          <section className=\"footer\">\r\n            <div className=\"title\">Welcome back</div>\r\n            <NavLink to=\"/login\" className=\"forgetpass\">\r\n              <div className=\"forget-text\">\r\n                <span>Did you forgot your password?</span>\r\n              </div>\r\n            </NavLink>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </LoginStyles>\r\n  );\r\n});\r\n\r\nexport default LoginPortal;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value ? value : \"\");\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { Avatar, useTheme } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\ninterface ICustomAvatar {\r\n  src: string | null;\r\n  errorMessage: string;\r\n  className: string;\r\n  variant?: \"circle\" | \"rounded\" | \"square\";\r\n}\r\n\r\nconst CustomAvatar: React.FC<ICustomAvatar> = memo(\r\n  ({ src, errorMessage, className, variant }) => {\r\n    const theme: any = useTheme();\r\n    return src === \"\" ||\r\n      src === \"null\" ||\r\n      src === null ||\r\n      typeof src === \"undefined\" ? (\r\n      <Avatar\r\n        className={className}\r\n        variant={variant ? variant : \"circle\"}\r\n        style={{\r\n          height: theme.spacing(5),\r\n          width: theme.spacing(5),\r\n          backgroundColor: theme.palette.primary.main,\r\n          color: theme.palette.secondary.contrastText,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: `1em`,\r\n            fontWeight: 900,\r\n            letterSpacing: \".3pt\",\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </div>\r\n      </Avatar>\r\n    ) : (\r\n      <Avatar\r\n        variant={variant ? variant : \"circle\"}\r\n        className={className}\r\n        style={{\r\n          height: theme.spacing(5),\r\n          width: theme.spacing(5),\r\n        }}\r\n        src={`data:image/jpg;base64,${src}`}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomAvatar;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useField } from \"formik\";\r\nimport React, { useEffect, useState, memo, FC } from \"react\";\r\nimport useDebounce from \"../../Hooks/UseDebounce\";\r\nimport { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\n\r\ninterface IFormikAutocomplete {\r\n  label?: string;\r\n  optKeyId: string;\r\n  optKeyLabel: string;\r\n  inputFieldName: string;\r\n  selectFieldName: string;\r\n  endPoint: string;\r\n  className?: string;\r\n  rows?: string;\r\n  multiline?: string;\r\n  variant?: any;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  size?: \"small\" | \"medium\";\r\n  onSelectChange?: () => void;\r\n}\r\n\r\nconst FormikAutocomplete: FC<IFormikAutocomplete> = memo(\r\n  ({\r\n    label,\r\n    optKeyId,\r\n    optKeyLabel,\r\n    inputFieldName,\r\n    selectFieldName,\r\n    endPoint,\r\n    className,\r\n    rows,\r\n    multiline,\r\n    variant,\r\n    required,\r\n    placeholder,\r\n    size,\r\n  }) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [inputField, inputMeta, inputArgs] = useField({\r\n      name: inputFieldName,\r\n    });\r\n    const errorText =\r\n      inputMeta.error && inputMeta.touched ? inputMeta.error : \"\";\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectField, selectMeta, selectArgs] = useField({\r\n      name: selectFieldName,\r\n    });\r\n\r\n    const debouncedSearchTerm = useDebounce(\r\n      selectField.value ? selectField.value : \"\",\r\n      500\r\n    );\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setLoading(true);\r\n        setOptions([]);\r\n        const response = await PostFetch(endPoint, {\r\n          value: selectField.value ? selectField.value : \"\",\r\n        });\r\n        setLoading(false);\r\n        if (response.success) {\r\n          setOptions(response.data);\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof debouncedSearchTerm === \"string\" &&\r\n        debouncedSearchTerm !== null\r\n      ) {\r\n        fetchData();\r\n      } else {\r\n        setOptions([]);\r\n      }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n      selectArgs.setValue(selectField.value ? selectField.value : \"\");\r\n      return () => {};\r\n    }, []);\r\n\r\n    return (\r\n      <Autocomplete\r\n        // value={inputField?.value[optKeyId]}\r\n        options={options}\r\n        loading={loading}\r\n        filterSelectedOptions={true}\r\n        loadingText=\"Loading options\"\r\n        getOptionLabel={(option) => option[optKeyLabel]}\r\n        renderOption={(option, state) => {\r\n          if (option.picture) {\r\n            return (\r\n              <div className=\"autocomplete-picture\">\r\n                <CustomAvatar\r\n                  src={option.picture}\r\n                  errorMessage={option.label.charAt(0)}\r\n                  className=\"\"\r\n                />\r\n                {option.label}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <option>{option.label}</option>;\r\n          }\r\n        }}\r\n        onChange={(event, newValue) => {\r\n          if (newValue && typeof newValue !== \"undefined\") {\r\n            if (typeof newValue[optKeyId] === \"number\") {\r\n              inputArgs.setValue(newValue[optKeyId].toString());\r\n            } else {\r\n              inputArgs.setValue(newValue[optKeyId]);\r\n            }\r\n          } else {\r\n            inputArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        inputValue={selectField?.value ? selectField?.value : \"\"}\r\n        onInputChange={(event, newInputValue) => {\r\n          if (newInputValue) {\r\n            selectArgs.setValue(newInputValue);\r\n          } else {\r\n            selectArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        filterOptions={(options, state) => options}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            {...inputField}\r\n            {...size}\r\n            size={size}\r\n            helperText={errorText}\r\n            error={!!errorText}\r\n            label={label}\r\n            variant={variant}\r\n            // InputProps={{\r\n            //   ...inputField,\r\n            //   value: inputField.value ? inputField.value : \"\",\r\n            // }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            rows={rows}\r\n            multiline={multiline ? true : false}\r\n            required={required ? true : false}\r\n            placeholder={placeholder}\r\n            fullWidth\r\n          />\r\n        )}\r\n        className={className}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikAutocomplete;\r\n","import { Dispatch } from \"react\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\nimport { PageReducerTypes } from \"../Services/Types/PageTypes\";\r\n\r\nconst helperErrorMessage = (\r\n  dispatch: Dispatch<PageReducerTypes>,\r\n  response: IServerResponse,\r\n  onError?: () => any\r\n) => {\r\n  if (response.message && typeof response.message === \"string\") {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: response.message.toString(),\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  response?.errors?.forEach((err) => {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: ` ${err} `,\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  });\r\n  if (typeof onError === \"function\") {\r\n    onError();\r\n  }\r\n};\r\n\r\nexport default helperErrorMessage;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { BarangayOfficialModel } from \"../Models/BarangayOfficialModels\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/official/`;\r\n\r\nconst getBrgyOfficialDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getBrgyOfficialDataTable\",\r\n    payload\r\n  );\r\n\r\n  console.log(`response`, response);\r\n  return response;\r\n};\r\n\r\nconst addBarangayOfficialApi = async (\r\n  payload: BarangayOfficialModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"addBarangayOfficial\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getBrgyOfficialDataTableApi,\r\n  addBarangayOfficialApi,\r\n};\r\n","export const DbCivilStatus = [\r\n  \"annulled\",\r\n  \"divorced\",\r\n  \"married\",\r\n  \"widower\",\r\n  \"single\",\r\n  \"widow\",\r\n];\r\n\r\nexport const DbReligion = [\r\n  \"religion\",\r\n  \"PPI\",\r\n  \"Aglipayan\",\r\n  \"ALLIANCE\",\r\n  \"Atheists\",\r\n  \"Banahaw\",\r\n  \"Baptist\",\r\n  \"Buddhist\",\r\n  \"Dating Daan\",\r\n  \"El Shaddai\",\r\n  \"Episcopal\",\r\n  \"Evangelical\",\r\n  \"GWMC\",\r\n  \"Hindu\",\r\n  \"INC\",\r\n  \"Indigeneous\",\r\n  \"Islam\",\r\n  \"JC\",\r\n  \"Jehovah\",\r\n  \"Judaism\",\r\n  \"Latter\",\r\n  \"Lutheran\",\r\n  \"Mennonites\",\r\n  \"Methodist\",\r\n  \"Nazarene\",\r\n  \"None\",\r\n  \"Others\",\r\n  \"PBMA\",\r\n  \"Presbyterian\",\r\n  \"Protestant\",\r\n  \"CATHOLIC\",\r\n  \"FOURSQUARE\",\r\n  \"Seventh-Day\",\r\n  \"UCCP\",\r\n  \"Unitarian\",\r\n  \"WCG\",\r\n  \"WESLEYAN\",\r\n  \"Born Again\",\r\n  \"PRES\",\r\n  \"IFI\",\r\n  \"CHRISTIAN\",\r\n  \"PENTECOSTAL\",\r\n  \"CAMACOP\",\r\n  \"Southern Baptist\",\r\n  \"ALPHA AND OMEGA\",\r\n  \"COC\",\r\n  \"ECOFI\",\r\n  \"MORMONS\",\r\n  \"HOPE\",\r\n  \"ZION\",\r\n  \"IGLESIA SA DIOS ESPIRITU\",\r\n  \"GPF\",\r\n  \"LDS\",\r\n  \"Church of God\",\r\n  \"Bag-ong Herosalem\",\r\n  \"Good News\",\r\n  \"ANGLICAN\",\r\n  \"CDCC\",\r\n  \"full gospel\",\r\n  \"espiritista\",\r\n  \"iglesia rosa mistika fili\",\r\n  \"UPC\",\r\n  \"messiah assembly\",\r\n  \"PICC\",\r\n  \"JIL\",\r\n  \"FAITH TRIBAL MINISTRY\",\r\n  \"AOG\",\r\n  \"YEMENE\",\r\n  \"UNIVERSAL\",\r\n  \"Lutheran Cath\",\r\n  \"IGLESIAFILIPINA\",\r\n  \"Sikh\",\r\n  \"CHHEALER\",\r\n  \"BUKYO\",\r\n  \"FAITH TABERNACLE\",\r\n  \"Orthodox\",\r\n  \"JEWISH\",\r\n  \"KINGDOM\",\r\n  \"Moncadista\",\r\n];\r\n\r\nexport const DbNationality = [\r\n  \"nationality\",\r\n  \"American\",\r\n  \"Australian\",\r\n  \"BELGIAN\",\r\n  \"British\",\r\n  \"BULGARIAN\",\r\n  \"Canadian\",\r\n  \"CHINESE\",\r\n  \"Colombian\",\r\n  \"COSTA\",\r\n  \"Dutch\",\r\n  \"Egyptian\",\r\n  \"Fil-Am \t \",\r\n  \"Fil-German \t \",\r\n  \"Fil-Jap \t \",\r\n  \"Filipino \t\",\r\n  \"French\",\r\n  \"German\",\r\n  \"GREEK\",\r\n  \"HONDURANS\",\r\n  \"Indian\",\r\n  \"Indonesian\",\r\n  \"Irish\",\r\n  \"Japanese\",\r\n  \"KENYAN\",\r\n  \"Korean\",\r\n  \"LEBANESE\",\r\n  \"Malaysian\",\r\n  \"MEXICAN\",\r\n  \"Myanmar\",\r\n  \"Norwegian\",\r\n  \"Panamian\",\r\n  \"RUSSIAN\",\r\n  \"SAUDI\",\r\n  \"SINGAPOREAN\",\r\n  \"SRI-LANKA \t \",\r\n  \"Swedish\",\r\n  \"Swiss\",\r\n  \"Syrian\",\r\n  \"Taiwanesse\",\r\n];\r\n\r\nexport const DbBrgyOfficialPositions = [\r\n  \"kagawad\",\r\n  \"Secretary\",\r\n  \"Treasurer\",\r\n  \"Punong Barangay\",\r\n  \"Day Care Worker\",\r\n  \"Utility Worker\",\r\n  \"Health Worker\",\r\n];\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport React, { FC, memo, useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikAutocomplete from \"../../../Component/Formik/FormikAutocomplete\";\r\nimport { addAdminAction } from \"../../../Services/Actions/AdminActions\";\r\nimport { addBarangayOfficialAction } from \"../../../Services/Actions/BrgyOfficialActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { BarangayOfficialModel } from \"../../../Services/Models/BarangayOfficialModels\";\r\nimport { DbBrgyOfficialPositions } from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddBrgyOfficialAdminInterface {}\r\n\r\nconst initFormValues: BarangayOfficialModel = {\r\n  resident_pk: null,\r\n  resident_name: \"\",\r\n  position: null,\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  resident_pk: yup.string().required().max(150).label(\"Resident\"),\r\n  resident_name: yup.string().required().max(150).label(\"Resident\"),\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n});\r\n\r\nexport const AddBrgyOfficialAdminView: FC<AddBrgyOfficialAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const formRef = useRef<FormikProps<BarangayOfficialModel> | null>(null);\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (\r\n        formValues: BarangayOfficialModel,\r\n        helpers: FormikHelpers<BarangayOfficialModel>\r\n      ) => {\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                addBarangayOfficialAction(formValues, (msg: string) => {\r\n                  helpers.resetForm();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const settingPageLinks = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/brgy-official\",\r\n              title: \"Brgy. Officials\",\r\n            },\r\n            {\r\n              link: window.location.pathname,\r\n              title: \"Add Brgy. Officials\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && settingPageLinks();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Formik\r\n          initialValues={initFormValues}\r\n          validationSchema={formSchema}\r\n          validateOnChange={false}\r\n          validateOnBlur={false}\r\n          onSubmit={handleFormSubmit}\r\n          innerRef={formRef}\r\n        >\r\n          {({ values, errors, touched, setFieldValue }) => (\r\n            <Form className=\"\">\r\n              <div className=\"\">\r\n                <div className=\"box-header\">\r\n                  <div className=\"form-title\">\r\n                    Fill-up the personal information\r\n                  </div>\r\n                </div>\r\n                <div className=\"box-body\" style={{ padding: `2em` }}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid xs={12} item>\r\n                      <FormikAutocomplete\r\n                        label=\"Resident\"\r\n                        optKeyId=\"id\"\r\n                        optKeyLabel=\"label\"\r\n                        inputFieldName=\"resident_pk\"\r\n                        selectFieldName=\"resident_name\"\r\n                        endPoint=\"api/resident/searchResident\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} item>\r\n                      {(() => {\r\n                        const name = \"position\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name] ? values[name] : \"\"}\r\n                            label=\"Position\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                            required\r\n                          >\r\n                            {DbBrgyOfficialPositions.map((value) => (\r\n                              <MenuItem key={value} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ marginTop: \"1em\" }}>\r\n                <Grid container justify={\"flex-end\"} spacing={3}>\r\n                  <Grid item>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                    >\r\n                      Assign Brgy. Official\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        history.push(`/admin/brgy-official`);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AddBrgyOfficialAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport BrgyOfficialApi from \"../Api/BrgyOfficialApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { BarangayOfficialModel } from \"../Models/BarangayOfficialModels\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { BrgyOfficialReducerTypes } from \"../Types/BrgyOfficialTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setBrgyOfficialDataTableAction = (\r\n  payload: PaginationModel\r\n) => async (dispatch: Dispatch<BrgyOfficialReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_brgy_official_data_table\",\r\n      fetching_brgy_official_data_table: true,\r\n    });\r\n    const response: IServerResponse = await BrgyOfficialApi.getBrgyOfficialDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_brgy_official_data_table\",\r\n      fetching_brgy_official_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_brgy_official_data_table\",\r\n        brgy_official_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addBarangayOfficialAction = (\r\n  payload: BarangayOfficialModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (\r\n  dispatch: Dispatch<BrgyOfficialReducerTypes | PageReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await BrgyOfficialApi.addBarangayOfficialApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  FormControl,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\ninterface IDataTableSearch {\r\n  onSubmit: (values: any) => void;\r\n  handleSetSearchField: (value: string) => void;\r\n  searchField: string;\r\n}\r\n\r\nexport const DataTableSearch: FC<IDataTableSearch> = memo(\r\n  ({ onSubmit, searchField, handleSetSearchField }) => {\r\n    return (\r\n      <form onSubmit={onSubmit} style={{ minWidth: 300 }}>\r\n        <FormControl size=\"small\" fullWidth variant=\"outlined\">\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-amount\"\r\n            placeholder=\"Enter the keywords to search\"\r\n            endAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <IconButton type=\"submit\">\r\n                  <SearchRoundedIcon color=\"primary\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            autoFocus\r\n            value={searchField}\r\n            onChange={(e) => {\r\n              handleSetSearchField(e.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSearch;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\n\r\ninterface IDataTableSort {\r\n  selectedSortIndex: string | number;\r\n  handleChagenSelectedSortIndex: (e: any) => void;\r\n  initialTableSort: any;\r\n}\r\n\r\nexport const DataTableSort: FC<IDataTableSort> = memo(\r\n  ({ selectedSortIndex, handleChagenSelectedSortIndex, initialTableSort }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: `grid`,\r\n          gridAutoFlow: \"column\",\r\n          alignItems: `center`,\r\n          alignContent: `center`,\r\n          gridGap: `.7em`,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontWeight: 500,\r\n            fontSize: `.9em`,\r\n            fontFamily: \"Nunito\",\r\n          }}\r\n        >\r\n          Sort By\r\n        </div>\r\n\r\n        <TextField\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          select\r\n          size=\"small\"\r\n          fullWidth\r\n          value={selectedSortIndex}\r\n          style={{ width: 150 }}\r\n          onChange={(e) => {\r\n            handleChagenSelectedSortIndex(e.target.value);\r\n          }}\r\n        >\r\n          {initialTableSort.map((sort, index) => (\r\n            <MenuItem key={index} className=\"sort-item\" value={index}>\r\n              {sort.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSort;\r\n","import { LinearProgress } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface ILinearLoadingProgress {\r\n  show: boolean;\r\n}\r\n\r\nconst LinearLoadingProgress: React.FC<ILinearLoadingProgress> = memo(\r\n  ({ show }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          opacity: show ? 1 : 0,\r\n        }}\r\n      >\r\n        <LinearProgress />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinearLoadingProgress;\r\n","import moment from \"moment\";\r\n\r\nexport const displayMySqlDate = (\r\n  date: string,\r\n  replaceEmpty?: string\r\n): string | undefined => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return replaceEmpty;\r\n  }\r\n  return moment(parsedDate).format(\"MMM. DD, YYYY\");\r\n};\r\n\r\nexport const displayMySqlDateTime = (date: string): string | null => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return null;\r\n  }\r\n\r\n  const parsedData = moment(parsedDate).format(\"MMM. DD, YYYY hh:mm A\");\r\n\r\n  if (!moment(parsedData).isValid()) {\r\n    return \"-\";\r\n  }\r\n\r\n  return parsedData;\r\n};\r\n\r\nexport const displayMySqlTime = (time: string): string | null => {\r\n  // const parsedDate = new Date(date);\r\n  // if (!moment(parsedDate).isValid) {\r\n  //   return null;\r\n  // }\r\n  // const parsedData = moment(parsedDate).format(\"hh:mm A\");\r\n  // return parsedData;\r\n\r\n  return moment(time, \"hh:mm:ss\").format(\"HH:mm a\");\r\n};\r\n\r\nexport const displaySex = (sex: \"m\" | \"f\") => {\r\n  if (sex.toLocaleLowerCase() === \"m\") {\r\n    return \"Male\";\r\n  }\r\n  if (sex.toLocaleLowerCase() === \"f\") {\r\n    return \"Female\";\r\n  }\r\n};\r\n\r\nexport const dateParseJsToAspDate = (date: Date): any => {\r\n  return moment(new Date(date)).format(\"LLLL\");\r\n};\r\n\r\nexport const InvalidTimeToDefault = (\r\n  date: Date | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const time = moment(date).format(\"hh:mm a\");\r\n\r\n  if (time.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return time;\r\n};\r\n\r\nexport const InvalidDateToDefault = (\r\n  date: Date | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const InvalidDateTimeToDefault = (\r\n  date: Date | string | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY hh:mm a\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst useFilter = (\r\n  defaultSearch: any,\r\n  initialTableSort: any,\r\n  initialLimit: any\r\n) => {\r\n  const [tableSearch, setTableSearch] = useState(defaultSearch);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  const [tableLimit, setTableLimit] = useState(\r\n    typeof initialLimit === \"number\" ? initialLimit : 25\r\n  );\r\n  const [tablePage, setTablePage] = useState(0);\r\n  const [tableCount, setTableCount] = useState(0);\r\n\r\n  if (initialTableSort.length <= 0) {\r\n    console.error(`please make sure that the sort has value`);\r\n  }\r\n\r\n  const [selectedSortIndex, setSelectedSortIndex] = useState(0);\r\n  const [activeSort, setActiveSort] = useState(null);\r\n\r\n  const handleChagenSelectedSortIndex = useCallback((index) => {\r\n    setSelectedSortIndex(index);\r\n  }, []);\r\n\r\n  const handleSetSearchField = useCallback((value) => {\r\n    setSearchField(value);\r\n  }, []);\r\n\r\n  const handleSetTableSearch = useCallback((newState) => {\r\n    setTableSearch(newState);\r\n  }, []);\r\n\r\n  const handleSetLimit = useCallback((newLimit) => {\r\n    setTableLimit(newLimit);\r\n  }, []);\r\n\r\n  const handleSetPage = useCallback((newPage) => {\r\n    setTablePage(newPage);\r\n  }, []);\r\n\r\n  const handleSetCount = useCallback((newCount) => {\r\n    setTableCount(newCount);\r\n  }, []);\r\n\r\n  const handleChangePage = useCallback(\r\n    (event, page) => {\r\n      handleSetPage(page);\r\n    },\r\n    [handleSetPage]\r\n  );\r\n\r\n  const handleChangeRowsPerPage = useCallback(\r\n    (event) => {\r\n      if (typeof event.target.value !== \"undefined\") {\r\n        handleSetLimit(parseInt(event.target.value));\r\n        handleSetPage(0);\r\n      }\r\n    },\r\n    [handleSetLimit, handleSetPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const generateSearchFilters = () => {\r\n      const foundSortItem = initialTableSort[selectedSortIndex];\r\n\r\n      if (foundSortItem) {\r\n        if (foundSortItem?.value) {\r\n          setActiveSort(foundSortItem?.value);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && generateSearchFilters();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [initialTableSort, selectedSortIndex]);\r\n\r\n  return [\r\n    tableSearch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableCount,\r\n    activeSort,\r\n    searchField,\r\n    selectedSortIndex,\r\n    handleSetTableSearch,\r\n    // handleSetLimit,\r\n    // handleSetPage,\r\n    // handleSetCount,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    handleChagenSelectedSortIndex,\r\n    handleSetSearchField,\r\n  ];\r\n};\r\n\r\nexport default useFilter;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateTimeToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setBrgyOfficialDataTableAction } from \"../../../Services/Actions/BrgyOfficialActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { BarangayOfficialModel } from \"../../../Services/Models/BarangayOfficialModels\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableBrgyOfficialAdminInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Alphabetical Asc\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Alphabetical Desc\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Brgy. Official\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Position\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Status\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableBrgyOfficialAdminView: FC<DataTableBrgyOfficialAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) =>\r\n        store.BrgyOfficialReducer.fetching_brgy_official_data_table\r\n    );\r\n    const data_table: Array<BarangayOfficialModel> = useSelector(\r\n      (store: RootStore) =>\r\n        store.BrgyOfficialReducer?.brgy_official_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setBrgyOfficialDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: window.location.pathname,\r\n              title: \"Brgy. Officials\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/brgy-official/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Set Brgy. Official\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              variant=\"rounded\"\r\n                              src={`${row.pic}`}\r\n                              errorMessage={`${row.first_name?.charAt(\r\n                                0\r\n                              )}${row.last_name?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/resident/${row.resident_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.first_name} {row.middle_name}{\" \"}\r\n                                {row.last_name} {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">\r\n                              {row.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.position}</TableCell>\r\n\r\n                        <TableCell>\r\n                          <Chip\r\n                            style={{\r\n                              backgroundColor: row.sts_backgroundColor,\r\n                              color: row.sts_color,\r\n                            }}\r\n                            label={row.sts_desc}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateTimeToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableBrgyOfficialAdminView;\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst FormikInputField = (props: TextFieldProps) => {\r\n  const [field, meta] = useField(\r\n    typeof props.name !== \"undefined\" ? props.name : \"\"\r\n  );\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      error={!!errorText}\r\n      helperText={errorText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikInputField;\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormControlProps,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface IOptions {\r\n  id: string | number;\r\n  label: string | number;\r\n}\r\n\r\ninterface IFormikRadio {\r\n  data: Array<IOptions>;\r\n  label: string;\r\n  name: string;\r\n  variant: \"vertical\" | \"horizontal\";\r\n  required?: boolean;\r\n}\r\n\r\nconst FormikRadio: React.FC<IFormikRadio> = memo(\r\n  ({ name, variant, label, data, required, ...props }) => {\r\n    const [field, meta] = useField(name);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n      <FormControl\r\n        required={required ? true : false}\r\n        error={!!errorText}\r\n        component=\"fieldset\"\r\n      >\r\n        <FormLabel\r\n          style={{\r\n            transform: \"translate(14px, -6px) scale(0.75)\",\r\n            transformOrigin: \" top left\",\r\n          }}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-label={name}\r\n          {...field}\r\n          value={field.value ? field.value : \"\"}\r\n          style={\r\n            variant === \"vertical\"\r\n              ? {\r\n                  display: \"grid\",\r\n                  gridAutoFlow: \"column\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  marginTop: `-5px`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          {data.map((option, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={option.id}\r\n              control={<Radio size=\"small\" color=\"primary\" />}\r\n              label={option.label}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n        <FormHelperText>{errorText}</FormHelperText>\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikRadio;\r\n","import React, { memo } from \"react\";\r\nimport MaskedInput from \"react-text-mask\";\r\n\r\nconst MaskedPhoneNumber = memo((props: any) => {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      placeholder={\"+639\"}\r\n      mask={[\r\n        \"+\",\r\n        \"6\",\r\n        \"3\",\r\n        \"9\",\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n      ]}\r\n      showMask\r\n      guide={false}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MaskedPhoneNumber;\r\n","import { Avatar, Badge, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport ImageSearchIcon from \"@material-ui/icons/ImageSearch\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IPhotoField {\r\n  selectedFile: File | null;\r\n  handleChange: (e: File | null) => any;\r\n  name?: string;\r\n  label?: string;\r\n  height?: number;\r\n  width?: number;\r\n  variant?: any;\r\n}\r\n\r\nconst PhotoField: React.FC<IPhotoField> = memo(\r\n  ({ selectedFile, handleChange, name, label, height, width, variant }) => {\r\n    const [preview, setPreview] = useState<any>(null);\r\n\r\n    const onSelectFile = useCallback(\r\n      async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n          handleChange(undefined);\r\n          return;\r\n        }\r\n\r\n        if (e.target.files[0]) {\r\n          handleChange(e.target.files[0]);\r\n        }\r\n      },\r\n      [handleChange]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!selectedFile) {\r\n        setPreview(null);\r\n        return;\r\n      }\r\n\r\n      const objectUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(objectUrl);\r\n\r\n      return () => URL.revokeObjectURL(objectUrl);\r\n    }, [selectedFile]);\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            fontSize: \".78em\",\r\n            fontWeight: 400,\r\n            color: \"rgba(0,0,0,.7)\",\r\n            marginBottom: \"1em\",\r\n          }}\r\n        >\r\n          {label}\r\n        </div>\r\n\r\n        <StyledImageField\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          badgeContent={\r\n            <Tooltip title=\"Select a photo\">\r\n              <div className=\"btn-search-photo\">\r\n                <IconButton\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#e2d5b2\",\r\n                    border: `.01em solid #e2d5b2`,\r\n                  }}\r\n                  htmlFor={name}\r\n                  component=\"label\"\r\n                >\r\n                  <ImageSearchIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <input\r\n                  id={name}\r\n                  className=\"fileInput\"\r\n                  onChange={onSelectFile}\r\n                  type=\"file\"\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Avatar\r\n            src={preview}\r\n            style={{\r\n              height: height,\r\n              width: width,\r\n              backgroundColor: \"#fff\",\r\n              boxShadow: `0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n              0 2px 4px -1px rgba(0, 0, 0, 0.06)`,\r\n              border: \".01em solid rgba(0,0,0,.1)\",\r\n            }}\r\n            variant={variant ? variant : \"circle\"}\r\n          >\r\n            {!preview && (\r\n              <div\r\n                style={{\r\n                  display: \"grid\",\r\n                  justifyContent: \"center\",\r\n                  justifyItems: `center`,\r\n                  textAlign: \"center\",\r\n                  color: `rgba(0,0,0,.5)`,\r\n                  fontWeight: 900,\r\n                  fontSize: `.75em`,\r\n                }}\r\n              >\r\n                Upload an image\r\n              </div>\r\n            )}\r\n          </Avatar>\r\n        </StyledImageField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PhotoField;\r\n\r\nexport const StyledImageField = styled(Badge)`\r\n  .btn-search-photo {\r\n    display: grid;\r\n    grid-template-areas: \"content\";\r\n    justify-items: center !important;\r\n    justify-content: center !important;\r\n    .btn {\r\n      grid-area: content;\r\n      /* background-color: red !important; */\r\n    }\r\n    .fileInput {\r\n      grid-area: content;\r\n      display: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// export const validateMobile = /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/;\r\nexport const validateMobile = /^(\\+639)\\d{9}$/;\r\n\r\nexport const validateUsernameLength = /^(?=.{8,20}$)/;\r\nexport const validateUsernameAllowedChar = /[a-zA-Z0-9._]/;\r\nexport const validateUsernameBeginChar = /(?![_.])/;\r\nexport const validateUsernameEndChar = /(?<![_.])/;\r\n\r\nexport const validateUsername = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      validateUsernameBeginChar,\r\n      `${label} must not begin special characters period(.) or underscore(_)`\r\n    )\r\n    .matches(\r\n      validateUsernameAllowedChar,\r\n      `${label} must not contain special characters except (._)`\r\n    )\r\n    .matches(\r\n      validateUsernameLength,\r\n      `${label} must be 8 characters short and 20 characters long`\r\n    )\r\n    .matches(\r\n      validateUsernameEndChar,\r\n      `${label} must not end special characters period(.) or underscore(_)`\r\n    );\r\n\r\n  return validatedUsername;\r\n};\r\n\r\nexport const validatePassword = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&_*]{6,25}$/,\r\n      `${label} must be 6 to 25 characters long with numbers and special characters`\r\n    );\r\n  return validatedUsername;\r\n};\r\n","export const fileToBase64 = (blob: Blob): Promise<string | null> =>\r\n  new Promise((resolve, reject) => {\r\n    if (!blob) {\r\n      return resolve(null);\r\n    }\r\n    const reader: FileReader = new FileReader();\r\n    reader.readAsBinaryString(blob);\r\n\r\n    reader.onload = () => {\r\n      if (typeof reader.result === \"string\") {\r\n        return resolve(btoa(reader.result));\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error: any) => {\r\n      return resolve(null);\r\n    };\r\n  });\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdministratorModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/admin/`;\r\n\r\nexport const getAdminDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getAdminDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const addAdminApi = async (\r\n  payload: AdministratorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const updateAdminApi = async (\r\n  payload: AdministratorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const getSingleAdminApi = async (\r\n  admin_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleAdmin\", {\r\n    admin_pk,\r\n  });\r\n  return response;\r\n};\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { validateEmail } from \"../../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addAdminAction } from \"../../../Services/Actions/AdminActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { AdministratorModel } from \"../../../Services/Models/AdminModel\";\r\n\r\ninterface AddCoAdminViewInterface {}\r\n\r\nconst initFormValues: AdministratorModel = {\r\n  pic: \"\",\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  gender: null,\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  email: yup.string().required().matches(validateEmail),\r\n  phone: yup.string().required(),\r\n  gender: yup.string().required().max(1).label(\"Gender\"),\r\n});\r\n\r\nexport const AddCoAdminView: FC<AddCoAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<AdministratorModel> | null>(null);\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (\r\n      formValues: AdministratorModel,\r\n      helpers: FormikHelpers<AdministratorModel>\r\n    ) => {\r\n      formValues.pic = await fileToBase64(pic);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addAdminAction(formValues, (msg: string) => {\r\n                helpers.resetForm();\r\n                setPic(null);\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/administrator\",\r\n            title: \"Administrators\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add administrator\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"\">\r\n            <div className=\"\">\r\n              <div className=\"box-header\">\r\n                <div className=\"form-title\">\r\n                  Fill-up the personal information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container spacing={3}>\r\n                  <Grid xs={12} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={150}\r\n                        width={150}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        variant=\"rounded\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"First Name\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"Enter first name\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Last Name\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Enter last name\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikRadio\r\n                      name=\"gender\"\r\n                      label=\"Gender\"\r\n                      variant=\"vertical\"\r\n                      data={[\r\n                        {\r\n                          id: \"m\",\r\n                          label: \"Male\",\r\n                        },\r\n                        {\r\n                          id: \"f\",\r\n                          label: \"Female\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Email Address\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Phone Number\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      InputProps={{\r\n                        inputComponent: MaskedPhoneNumber,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                  >\r\n                    Add Administrator\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/administrator`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddCoAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport {\r\n  addAdminApi,\r\n  getAdminDataTableApi,\r\n  getSingleAdminApi,\r\n  updateAdminApi,\r\n} from \"../Api/AdminApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdministratorModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { AdminReducerTypes } from \"../Types/AdminTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setAdminDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: true,\r\n    });\r\n    const response: IServerResponse = await getAdminDataTableApi(payload);\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_admin_data_table\",\r\n        admin_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedTutorAction = (admin_pk: string) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: true,\r\n    });\r\n    const response: IServerResponse = await getSingleAdminApi(admin_pk);\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_admin\",\r\n        selected_admin: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addAdminAction = (\r\n  payload: AdministratorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await addAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateAdminAction = (\r\n  payload: AdministratorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await updateAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setAdminDataTableAction } from \"../../../Services/Actions/AdminActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { AdministratorModel } from \"../../../Services/Models/AdminModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableCoAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Profile\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Status\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableCoAdminView: FC<DataTableCoAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.AdminReducer.fetching_admin_data_table\r\n    );\r\n    const data_table: Array<AdministratorModel> = useSelector(\r\n      (store: RootStore) => store.AdminReducer.admin_data_table?.table\r\n    );\r\n\r\n    console.log(`data_table`, data_table);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setAdminDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/administrator\",\r\n              title: \"Administrators\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/administrator/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Administrator\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              variant=\"rounded\"\r\n                              src={`${row.pic}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/administrator/${row.admin_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.firstname} {row.lastname}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">\r\n                              {row?.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.phone}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.sts_desc}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableCoAdminView;\r\n","import { Button, IconButton, Paper, Popover } from \"@material-ui/core\";\r\nimport MoreHorizRoundedIcon from \"@material-ui/icons/MoreHorizRounded\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IIconButtonPopper {\r\n  buttonColor?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  iconColor?:\r\n    | \"inherit\"\r\n    | \"disabled\"\r\n    | \"action\"\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"error\"\r\n    | undefined;\r\n  buttons: Array<IButtonItem>;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\ninterface IButtonItem {\r\n  text: string;\r\n  Icon?: any;\r\n  handleClick?: () => void;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n}\r\n\r\nconst IconButtonPopper: React.FC<IIconButtonPopper> = memo(\r\n  ({ buttonColor, iconColor, buttons, style }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n      null\r\n    );\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n      <div style={style}>\r\n        <IconButton\r\n          color={buttonColor}\r\n          aria-describedby={id}\r\n          onClick={handleClick}\r\n          size=\"small\"\r\n        >\r\n          <MoreHorizRoundedIcon fontSize=\"small\" color={iconColor} />\r\n        </IconButton>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <PopperContent>\r\n            {buttons.map((btn: IButtonItem, index: number) => (\r\n              <Button\r\n                key={index}\r\n                color={btn.color}\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  handleClose();\r\n                  if (typeof btn.handleClick !== \"undefined\") {\r\n                    btn.handleClick();\r\n                  }\r\n                }}\r\n                startIcon={btn.Icon ? <btn.Icon fontSize=\"small\" /> : null}\r\n                disableElevation\r\n              >\r\n                <span style={{ fontWeight: 700, fontSize: `.87em` }}>\r\n                  {btn.text}\r\n                </span>\r\n              </Button>\r\n            ))}\r\n          </PopperContent>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default IconButtonPopper;\r\n\r\nconst PopperContent = styled(Paper)`\r\n  padding: 1em 0.5em;\r\n  display: grid;\r\n  grid-gap: 0.5em;\r\n  min-width: 150px;\r\n\r\n  .btn {\r\n  }\r\n  .MuiButton-label {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    justify-content: start;\r\n    justify-items: start;\r\n    align-items: center;\r\n    align-content: center;\r\n  }\r\n`;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { NewsCommentModel } from \"../Models/NewsCommentModels\";\r\nimport { NewsModel } from \"../Models/NewsModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/news/`;\r\n\r\nconst getNewsDataTable = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getNewsDataTable\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addNews = async (payload: NewsModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addNews\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateNews = async (payload: NewsModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateNews\", payload);\r\n  return response;\r\n};\r\n\r\nconst republishNews = async (news_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"republishNews\", {\r\n    news_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst unpublishNews = async (news_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"unpublishNews\", {\r\n    news_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleNews = async (news_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleNews\", {\r\n    news_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addNewsComment = async (\r\n  payload: NewsCommentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"addNewsComment\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addNewsReaction = async (\r\n  payload: NewsCommentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"addNewsReaction\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateNewsReaction = async (\r\n  payload: NewsCommentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateNewsReaction\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getNewsDataTable,\r\n  addNews,\r\n  updateNews,\r\n  republishNews,\r\n  unpublishNews,\r\n  getSingleNews,\r\n  addNewsComment,\r\n  addNewsReaction,\r\n  updateNewsReaction,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport NewsApi from \"../Api/NewsApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { NewsCommentModel } from \"../Models/NewsCommentModels\";\r\nimport { NewsModel } from \"../Models/NewsModels\";\r\nimport { NewsReducerTypes } from \"../Types/NewsTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setNewsDataTable = () => async (dispatch: Dispatch<NewsReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_news_table\",\r\n      fetch_news_table: true,\r\n    });\r\n    const response: IServerResponse = await NewsApi.getNewsDataTable();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"news_table\",\r\n        news_table: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_news_table\",\r\n      fetch_news_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst setSingleNews = (news_pk: number) => async (\r\n  dispatch: Dispatch<NewsReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_news\",\r\n      fetch_single_news: true,\r\n    });\r\n    const response: IServerResponse = await NewsApi.getSingleNews(news_pk);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_news\",\r\n        single_news: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_single_news\",\r\n      fetch_single_news: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst addNews = (\r\n  payload: NewsModel,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.addNews(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateNews = (\r\n  payload: NewsModel,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.updateNews(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst republishNews = (\r\n  news_pk: number,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.republishNews(news_pk);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst unpublishNews = (\r\n  news_pk: number,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.unpublishNews(news_pk);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst addNewsComment = (\r\n  payload: NewsCommentModel,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.addNewsComment(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst addNewsReaction = (\r\n  payload: NewsCommentModel,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.addNewsReaction(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateNewsReaction = (\r\n  payload: NewsCommentModel,\r\n  successCallback: (msg: string) => any\r\n) => async (dispatch: Dispatch<NewsReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await NewsApi.updateNewsReaction(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof successCallback === \"function\") {\r\n        successCallback(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setNewsDataTable,\r\n  setSingleNews,\r\n  addNews,\r\n  updateNews,\r\n  republishNews,\r\n  unpublishNews,\r\n  addNewsComment,\r\n  updateNewsReaction,\r\n};\r\n","import { Hidden } from \"@material-ui/core\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\nconst QontoConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 10,\r\n    left: \"calc(-50% + 16px)\",\r\n    right: \"calc(50% + 16px)\",\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      borderColor: \"#784af4\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      borderColor: \"#784af4\",\r\n    },\r\n  },\r\n  line: {\r\n    borderColor: \"#eaeaf0\",\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: \"#eaeaf0\",\r\n    display: \"flex\",\r\n    height: 22,\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    color: \"#784af4\",\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"currentColor\",\r\n  },\r\n  completed: {\r\n    color: \"#784af4\",\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props: StepIconProps) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nexport interface StepsProps {\r\n  label: string;\r\n  View: any;\r\n}\r\n\r\ninterface CustomStepperProps {\r\n  steps: Array<StepsProps>;\r\n  active_step: number;\r\n}\r\n\r\nconst CustomStepper: React.FC<CustomStepperProps> = ({\r\n  steps,\r\n  active_step,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={active_step}\r\n        connector={<QontoConnector />}\r\n      >\r\n        {steps?.map((step, key) => (\r\n          <Step key={key}>\r\n            <StepLabel StepIconComponent={QontoStepIcon}>\r\n              {step.label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      <div style={{ display: `grid`, gridTemplateAreas: `s` }}>\r\n        {steps.map((step, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              gridArea: `s`,\r\n              opacity: active_step === index ? 1 : 0,\r\n              zIndex: active_step === index ? 1 : 0,\r\n              transition: `.3s opacity ease`,\r\n            }}\r\n          >\r\n            {step.View}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomStepper;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport React, { memo, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFormDialog {\r\n  open: boolean;\r\n  title: string;\r\n  handleClose: () => void;\r\n  body?: any;\r\n  actions?: any;\r\n  minWidth?: number;\r\n}\r\n\r\nexport const FormDialog: React.FC<IFormDialog> = memo(\r\n  ({ children, open, title, handleClose, body, actions, minWidth }) => {\r\n    const theme = useTheme();\r\n\r\n    const descriptionElementRef = useRef<any>(null);\r\n    const mobile = useMediaQuery((theme: any) => theme.breakpoints.down(\"sm\"));\r\n    const dispatch = useDispatch();\r\n    const { radResultNo } = useParams<any>();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializeData = () => {};\r\n\r\n      mounted && open && initializeData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, radResultNo, open]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (open && mounted) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n          descriptionElement.focus();\r\n        }\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [open]);\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            width: mobile\r\n              ? \"95%\"\r\n              : typeof minWidth === \"undefined\"\r\n              ? 750\r\n              : minWidth,\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitleStyle theme={theme} disableTypography={true}>\r\n          <div className=\"title\">{title}</div>\r\n          <div className=\"toolbar\">\r\n            <Tooltip title=\"\">\r\n              <IconButton size=\"small\" onClick={handleClose}>\r\n                <CancelPresentationIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </DialogTitleStyle>\r\n\r\n        <DialogContentStyle theme={theme}>{body}</DialogContentStyle>\r\n        <DialogActionsStyle className=\"form-footer\">\r\n          {actions}\r\n        </DialogActionsStyle>\r\n      </Dialog>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormDialog;\r\n\r\nconst DialogTitleStyle = styled(DialogTitle)`\r\n  background-color: ${(p) => p.theme.palette.primary.dark};\r\n  color: ${(p) => p.theme.palette.primary.contrastText};\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  font-size: 0.87em;\r\n  align-items: center;\r\n  align-content: center;\r\n  grid-gap: 1em;\r\n\r\n  .title {\r\n    font-weight: 900;\r\n  }\r\n\r\n  .toolbar {\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    color: ${(p) => p.theme.palette.primary.contrastText};\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n    .MuiSvgIcon-root {\r\n      color: ${(p) => p.theme.palette.primary.contrastText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DialogContentStyle = styled(DialogContent)`\r\n  /* margin: 0;\r\n  padding: 0; */\r\n  background-color: ${(p) => p.theme.palette.common.white};\r\n  padding-top: 1em !important;\r\n  padding-bottom: 1em !important;\r\n`;\r\nconst DialogActionsStyle = styled(DialogActions)`\r\n  background-color: #fff;\r\n`;\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InsertDriveFile from \"@material-ui/icons/InsertDriveFile\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#eee\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    color: \"#333\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n  },\r\n  icon: {\r\n    marginTop: \"16px\",\r\n    color: \"#888888\",\r\n    fontSize: \"42px\",\r\n  },\r\n}));\r\n\r\nconst DropzoneFieldHookForm = ({ name }) => {\r\n  const { control, errors } = useFormContext();\r\n  const styles = useStyles();\r\n\r\n  let error = false;\r\n  let error_message = \"\";\r\n\r\n  if (errors && errors?.hasOwnProperty(name)) {\r\n    error = true;\r\n    error_message = errors[name]?.message;\r\n  }\r\n\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={[]}\r\n      render={({ onChange, onBlur, value }) => (\r\n        <>\r\n          <Dropzone onDrop={onChange}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <Paper\r\n                variant=\"outlined\"\r\n                className={styles.root}\r\n                {...getRootProps()}\r\n              >\r\n                <CloudUpload className={styles.icon} />\r\n                <input {...getInputProps()} name={name} onBlur={onBlur} />\r\n                <p>Drag and drop files here or click to select files</p>\r\n                <FormHelperText error={error}>{error_message}</FormHelperText>\r\n              </Paper>\r\n            )}\r\n          </Dropzone>\r\n\r\n          <List>\r\n            {value.map((f, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemIcon>\r\n                  <InsertDriveFile />\r\n                </ListItemIcon>\r\n                <ListItemText primary={f.name} secondary={f.size} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropzoneFieldHookForm;\r\n","import {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface RadioItems {\r\n  label: string;\r\n  value: string | number;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface MultiRadioFieldHookFormProps {\r\n  //extends Partial<> {\r\n  name: string;\r\n  label: string;\r\n  variant?: \"standard\" | \"outlined\" | \"filled\";\r\n  row?: boolean;\r\n  radio_items: Array<RadioItems>;\r\n}\r\n\r\nexport const MultiRadioFieldHookForm: FC<MultiRadioFieldHookFormProps> = memo(\r\n  (props) => {\r\n    const { control, errors } = useFormContext();\r\n\r\n    let error = false;\r\n    let error_message = \"\";\r\n\r\n    if (errors && errors?.hasOwnProperty(props?.name)) {\r\n      error = true;\r\n      error_message = errors[props?.name]?.message;\r\n    }\r\n\r\n    return (\r\n      <Controller\r\n        name={props.name}\r\n        control={control}\r\n        // defaultValue={\"\"}\r\n        render={(\r\n          { onChange, onBlur, value, name, ref },\r\n          { invalid, isTouched, isDirty }\r\n        ) => (\r\n          <FormControl\r\n            error={error}\r\n            name={name}\r\n            variant={props.variant}\r\n            component=\"fieldset\"\r\n          >\r\n            <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name={props.name}\r\n              row={props.row}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n            >\r\n              {props.radio_items.map((radio, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  value={radio.value}\r\n                  control={<Radio />}\r\n                  label={radio.label}\r\n                  disabled={radio.disabled}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n            <FormHelperText>{error_message}</FormHelperText>\r\n          </FormControl>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default MultiRadioFieldHookForm;\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface TextFieldHookFormProps {\r\n  textFieldProps: TextFieldProps;\r\n}\r\n\r\nexport const TextFieldHookForm: FC<TextFieldProps> = memo((props) => {\r\n  const { control, errors } = useFormContext();\r\n\r\n  let error = false;\r\n  let error_message = \"\";\r\n\r\n  if (errors && errors?.hasOwnProperty(props?.name)) {\r\n    error = true;\r\n    error_message = errors[props?.name]?.message;\r\n  }\r\n\r\n  return (\r\n    <Controller\r\n      name={props.name}\r\n      control={control}\r\n      // defaultValue={\"\"}\r\n      render={(\r\n        { onChange, onBlur, value, name, ref },\r\n        { invalid, isTouched, isDirty }\r\n      ) => (\r\n        <TextField\r\n          {...props}\r\n          name={name}\r\n          error={error}\r\n          defaultValue={value}\r\n          onBlur={onBlur}\r\n          onChange={onChange}\r\n          helperText={error_message}\r\n          inputRef={ref}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\n\r\nexport default TextFieldHookForm;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport CustomStepper from \"../../../Component/CustomStepper/CustomStepper\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport DropzoneFieldHookForm from \"../../../Component/HookForm/DropzoneFieldHookForm\";\r\nimport MultiRadioFieldHookForm from \"../../../Component/HookForm/MultiRadioFieldHookForm\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport NewsActions from \"../../../Services/Actions/NewsActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { NewsModel } from \"../../../Services/Models/NewsModels\";\r\n\r\ninterface AddNewsAdminProps {}\r\n\r\nexport const AddNewsAdminView: FC<AddNewsAdminProps> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const [open_add_news_dialog, set_open_add_news_dialog] = useState(false);\r\n\r\n  const [active_step, set_active_step] = useState(0);\r\n\r\n  const [form_payload, set_form_payload] = useState<any>({\r\n    title: \"\",\r\n    audience: \"\",\r\n    body: \"\",\r\n    upload_files: [],\r\n  });\r\n\r\n  const validate_main_details: any = yup.object({\r\n    audience: yup.string().required().label(\"Audience\"),\r\n    title: yup.string().required().label(\"Task Title\"),\r\n    body: yup.string().required().label(\"Task Description\"),\r\n  });\r\n\r\n  const form_add_news = useForm({\r\n    resolver: yupResolver(validate_main_details),\r\n    defaultValues: form_payload,\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const handleSetOpenNewsDialog = useCallback((open: boolean) => {\r\n    set_open_add_news_dialog(open);\r\n  }, []);\r\n\r\n  const Steps = [\r\n    {\r\n      label: \"Main Details\",\r\n      View: (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <MultiRadioFieldHookForm\r\n                name=\"audience\"\r\n                label=\"Audience\"\r\n                radio_items={[\r\n                  {\r\n                    value: \"r\",\r\n                    label: \"Residents Only\",\r\n                  },\r\n                  {\r\n                    value: \"b\",\r\n                    label: \"Brgy. Officials Only\",\r\n                  },\r\n                  {\r\n                    value: \"all\",\r\n                    label: \"All\",\r\n                  },\r\n                ]}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldHookForm\r\n                fullWidth\r\n                name=\"title\"\r\n                label=\"News Title\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldHookForm\r\n                name=\"body\"\r\n                label=\"News Content/Body\"\r\n                fullWidth\r\n                multiline={true}\r\n                rows={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Files\",\r\n      View: (\r\n        <Grid item container>\r\n          <Grid item xs={12}>\r\n            <DropzoneFieldHookForm name=\"upload_files\" />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleNext = () => {\r\n    set_active_step((prev_active_step) => {\r\n      if (prev_active_step === Steps.length - 1) {\r\n        return prev_active_step;\r\n      } else {\r\n        return prev_active_step + 1;\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    set_active_step((prevActiveStep) => {\r\n      if (prevActiveStep === 0) {\r\n        return prevActiveStep;\r\n      } else {\r\n        return prevActiveStep - 1;\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    set_active_step(0);\r\n  };\r\n\r\n  const handleSubmitForm = useCallback(\r\n    (data) => {\r\n      if (active_step === Steps.length - 1) {\r\n        const payload: NewsModel = data;\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                NewsActions.addNews(payload, () => {\r\n                  dispatch(NewsActions.setNewsDataTable());\r\n                  form_add_news.reset();\r\n                  handleSetOpenNewsDialog(false);\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      } else {\r\n        handleNext();\r\n      }\r\n    },\r\n    [active_step]\r\n  );\r\n\r\n  useEffect(() => {\r\n    set_form_payload((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...form_add_news.getValues(),\r\n      };\r\n    });\r\n  }, [active_step]);\r\n\r\n  useEffect(() => {\r\n    form_add_news.reset({\r\n      form_payload,\r\n      ...form_add_news.getValues(),\r\n    });\r\n  }, [form_payload]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          handleSetOpenNewsDialog(true);\r\n        }}\r\n      >\r\n        Create News\r\n      </Button>\r\n      <FormDialog\r\n        title=\"News Publishing Form\"\r\n        handleClose={() => handleSetOpenNewsDialog(false)}\r\n        open={open_add_news_dialog}\r\n        minWidth={500}\r\n        body={\r\n          <div>\r\n            <FormProvider {...form_add_news}>\r\n              <form\r\n                onSubmit={form_add_news.handleSubmit(handleSubmitForm)}\r\n                noValidate\r\n                id=\"form_add_news\"\r\n              >\r\n                <CustomStepper steps={Steps} active_step={active_step} />\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              onClick={() => {\r\n                handleReset();\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              Reset\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                handleBack();\r\n              }}\r\n              disabled={active_step === 0}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              form=\"form_add_news\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              {active_step === Steps.length - 1 ? `Submit` : \"Next\"}\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AddNewsAdminView;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledNewsContainer = styled(Container)`\r\n  display: grid !important;\r\n  grid-gap: 1em !important;\r\n  width: 100%;\r\n\r\n  .news-item {\r\n    padding: 1em;\r\n    margin: 0.5em 0;\r\n\r\n    border-radius: 7px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    align-items: center;\r\n    align-content: center;\r\n    grid-template-areas: \"profile actions\" \"title title\" \"body body\";\r\n    grid-auto-columns: 1fr auto;\r\n\r\n    .profile {\r\n      grid-area: profile;\r\n      display: grid;\r\n      grid-template-areas: \"img name\" \"img time\";\r\n      justify-content: start;\r\n      align-content: start;\r\n      .img {\r\n        grid-area: img;\r\n        margin-right: 0.5em;\r\n      }\r\n      .name {\r\n        grid-area: name;\r\n        margin-right: 0.5em;\r\n        font-weight: 600;\r\n      }\r\n      .time {\r\n        grid-area: time;\r\n        margin-right: 0.5em;\r\n        opacity: 0.7;\r\n        font-size: 0.9em;\r\n      }\r\n    }\r\n\r\n    .actions {\r\n      grid-area: actions;\r\n    }\r\n\r\n    .title {\r\n      grid-area: title;\r\n      justify-self: start;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .body {\r\n      grid-area: body;\r\n      justify-self: start;\r\n      font-size: 0.87em;\r\n      background-color: #fcfcfc;\r\n      border-radius: 7px;\r\n    }\r\n  }\r\n`;\r\n","import { Chip, Container, Grid } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport NewsActions from \"../../../Services/Actions/NewsActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { NewsModel } from \"../../../Services/Models/NewsModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport AddNewsAdminView from \"./AddNewsAdminView\";\r\nimport { StyledNewsContainer } from \"./styles\";\r\n\r\ninterface DtNewsAdminViewProps {}\r\n\r\nexport const DtNewsAdminView: FC<DtNewsAdminViewProps> = memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const news_table = useSelector(\r\n    (store: RootStore) => store.NewsReducer.news_table\r\n  );\r\n\r\n  const fetch_news_table = useSelector(\r\n    (store: RootStore) => store.NewsReducer.fetch_news_table\r\n  );\r\n\r\n  const RenderNewsAction = useCallback(\r\n    (news: NewsModel) => {\r\n      const actions: Array<any> = [\r\n        {\r\n          text: \"Edit News\",\r\n          handleClick: () => {},\r\n        },\r\n      ];\r\n\r\n      if (news.sts_pk === \"PU\") {\r\n        actions.push({\r\n          text: \"Unpublish News\",\r\n          handleClick: () => {\r\n            dispatch(\r\n              setGeneralPrompt({\r\n                open: true,\r\n                continue_callback: () =>\r\n                  dispatch(\r\n                    NewsActions.unpublishNews(news.news_pk, () => {\r\n                      dispatch(NewsActions.setNewsDataTable());\r\n                    })\r\n                  ),\r\n              })\r\n            );\r\n          },\r\n        });\r\n      } else if (news.sts_pk === \"UP\") {\r\n        actions.push({\r\n          text: \"Publish News\",\r\n          handleClick: () => {\r\n            dispatch(\r\n              setGeneralPrompt({\r\n                open: true,\r\n                continue_callback: () =>\r\n                  dispatch(\r\n                    NewsActions.republishNews(news.news_pk, () => {\r\n                      dispatch(NewsActions.setNewsDataTable());\r\n                    })\r\n                  ),\r\n              })\r\n            );\r\n          },\r\n        });\r\n      }\r\n\r\n      return actions;\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/news\",\r\n            title: \"News\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(NewsActions.setNewsDataTable());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <LinearLoadingProgress show={fetch_news_table} />\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n          <Grid item>\r\n            <AddNewsAdminView />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {news_table?.map((news, index) => (\r\n            <StyledNewsContainer key={index} maxWidth={\"sm\"}>\r\n              <div className=\"news-item\">\r\n                <div className=\"profile\">\r\n                  <CustomAvatar\r\n                    className=\"img\"\r\n                    src={news.user_pic}\r\n                    errorMessage={news?.user_full_name.charAt(0)}\r\n                  />\r\n                  <div className=\"name\">{news?.user_full_name}</div>\r\n                  <div className=\"time\">\r\n                    {moment(news?.encoded_at).fromNow()}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"actions\">\r\n                  <IconButtonPopper buttons={RenderNewsAction(news)} />\r\n                </div>\r\n\r\n                <div className=\"title\">\r\n                  {news?.title}{\" \"}\r\n                  <Chip\r\n                    label={news?.sts_desc}\r\n                    style={{\r\n                      color: news?.sts_color,\r\n                      backgroundColor: news?.sts_backgroundColor,\r\n                    }}\r\n                  />{\" \"}\r\n                </div>\r\n                <div className=\"body\">{news.body}</div>\r\n              </div>\r\n            </StyledNewsContainer>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DtNewsAdminView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { ResidentModel } from \"../Models/ResidentModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/resident/`;\r\n\r\nconst getResidentDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getDataTableResident\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addResidentApi = async (\r\n  payload: ResidentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addResident\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateResidentApi = async (\r\n  payload: ResidentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateResident\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getSingleResident = async (\r\n  resident_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleResident\", {\r\n    resident_pk: resident_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getResidentDataTableApi,\r\n  addResidentApi,\r\n  updateResidentApi,\r\n  getSingleResident,\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { validateEmail } from \"../../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { addResidentAction } from \"../../../Services/Actions/ResidentActions\";\r\nimport { ResidentModel } from \"../../../Services/Models/ResidentModels\";\r\nimport {\r\n  DbCivilStatus,\r\n  DbNationality,\r\n  DbReligion,\r\n} from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddResidentAdminInterface {}\r\n\r\nconst initFormValues: ResidentModel = {\r\n  first_name: \"\",\r\n  middle_name: \"\",\r\n  last_name: \"\",\r\n  suffix: \"\",\r\n  gender: null,\r\n  birth_date: null,\r\n  nationality: \"\",\r\n  religion: \"\",\r\n  civil_status: \"\",\r\n  dialect: \"\",\r\n  tribe: \"\",\r\n  with_disability: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  purok: \"\",\r\n  is_employed: null,\r\n  employment: \"\",\r\n  house_income: 0.0,\r\n  house_status: \"\",\r\n  voting_precinct: \"\",\r\n  house_ownership: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  first_name: yup.string().required().max(150).label(\"First Name\"),\r\n  last_name: yup.string().required().max(150).label(\"Last Name\"),\r\n  gender: yup.string().required().max(150).label(\"Gender\"),\r\n  birth_date: yup.date().nullable().required().label(\"Birth Date\"),\r\n  nationality: yup.string().required().max(150).label(\"Nationality\"),\r\n  religion: yup.string().required().max(150).label(\"Religion\"),\r\n  civil_status: yup.string().required().max(150).label(\"Civil Status\"),\r\n  dialect: yup.string().required().max(150).label(\"Dialect\"),\r\n  tribe: yup.string().required().max(150).label(\"Tribe\"),\r\n  with_disability: yup.string().required().max(150).label(\"With Disability\"),\r\n  phone: yup.string().required().max(150).label(\"Phone Number\"),\r\n  email: yup\r\n    .string()\r\n    .required()\r\n    .max(150)\r\n    .label(\"Gender\")\r\n    .matches(validateEmail),\r\n  purok: yup.string().required().max(150).label(\"Purok\"),\r\n  is_employed: yup.string().required().max(150).label(\"Is Employed\"),\r\n  employment: yup.string().required().max(150).label(\"Employment\"),\r\n  house_income: yup.string().max(150).label(\"House Income\"),\r\n  house_status: yup.string().max(150).label(\"House Status\"),\r\n  voting_precinct: yup.string().max(150).label(\"Voting Precinct\"),\r\n  house_ownership: yup.string().max(150).label(\"House Ownership\"),\r\n});\r\n\r\nexport const AddResidentAdminView: FC<AddResidentAdminInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<ResidentModel> | null>(null);\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (\r\n      formValues: ResidentModel,\r\n      helpers: FormikHelpers<ResidentModel>\r\n    ) => {\r\n      formValues.pic = await fileToBase64(pic);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addResidentAction(formValues, (msg: string) => {\r\n                helpers.resetForm();\r\n                setPic(null);\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/resident\",\r\n            title: \"Resident\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Resident\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"\">\r\n            <div className=\"\">\r\n              <div className=\"box-header\">\r\n                <div className=\"form-title\">\r\n                  Fill-up the resident information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container spacing={4}>\r\n                  <Grid xs={12} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={150}\r\n                        width={150}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        variant=\"rounded\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"First Name\"\r\n                      name=\"first_name\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Middle Name\"\r\n                      name=\"middle_name\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Last Name\"\r\n                      name=\"last_name\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={3} item>\r\n                    <FormikInputField\r\n                      label=\"Suffix\"\r\n                      name=\"suffix\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikRadio\r\n                      name=\"gender\"\r\n                      label=\"Gender\"\r\n                      variant=\"vertical\"\r\n                      data={[\r\n                        {\r\n                          id: \"m\",\r\n                          label: \"Male\",\r\n                        },\r\n                        {\r\n                          id: \"f\",\r\n                          label: \"Female\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    {(() => {\r\n                      const label = \"Birth Date\";\r\n                      const name = \"birth_date\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (date) => {\r\n                        setFieldValue(name, moment(date).toDate());\r\n                      };\r\n                      return (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                              value={values[name]}\r\n                              onChange={handleChange}\r\n                              label={label}\r\n                              variant=\"inline\"\r\n                              animateYearScrolling={true}\r\n                              disableFuture={true}\r\n                              format=\"MM/dd/yyyy\"\r\n                              fullWidth={true}\r\n                              inputVariant=\"outlined\"\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                              autoOk={true}\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    {(() => {\r\n                      const name = \"nationality\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (e: any) => {\r\n                        setFieldValue(name, e.target.value);\r\n                      };\r\n                      return (\r\n                        <TextField\r\n                          value={values[name] ? values[name] : \"\"}\r\n                          label=\"Nationality\"\r\n                          select\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          error={!!errorText}\r\n                          helperText={errorText}\r\n                          required\r\n                        >\r\n                          {DbNationality.map((value) => (\r\n                            <MenuItem key={value} value={value}>\r\n                              {value}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    {(() => {\r\n                      const name = \"religion\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (e: any) => {\r\n                        setFieldValue(name, e.target.value);\r\n                      };\r\n                      return (\r\n                        <TextField\r\n                          value={values[name] ? values[name] : \"\"}\r\n                          label=\"Religion\"\r\n                          select\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          error={!!errorText}\r\n                          helperText={errorText}\r\n                          required\r\n                        >\r\n                          {DbReligion.map((value) => (\r\n                            <MenuItem key={value} value={value}>\r\n                              {value}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    {(() => {\r\n                      const name = \"civil_status\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (e: any) => {\r\n                        setFieldValue(name, e.target.value);\r\n                      };\r\n                      return (\r\n                        <TextField\r\n                          value={values[name] ? values[name] : \"\"}\r\n                          label=\"Civil Status\"\r\n                          select\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          error={!!errorText}\r\n                          helperText={errorText}\r\n                          required\r\n                        >\r\n                          {DbCivilStatus.map((value) => (\r\n                            <MenuItem key={value} value={value}>\r\n                              {value}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Dialect\"\r\n                      name=\"dialect\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Tribe\"\r\n                      name=\"tribe\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"text\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikRadio\r\n                      name=\"with_disability\"\r\n                      label=\"With Disability?\"\r\n                      variant=\"vertical\"\r\n                      data={[\r\n                        {\r\n                          id: \"y\",\r\n                          label: \"Yes\",\r\n                        },\r\n                        {\r\n                          id: \"n\",\r\n                          label: \"No\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      InputProps={{\r\n                        inputComponent: MaskedPhoneNumber,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Purok\"\r\n                      name=\"purok\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Voting Precinct\"\r\n                      name=\"voting_precinct\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikRadio\r\n                      name=\"is_employed\"\r\n                      label=\"Is he/she Employed?\"\r\n                      variant=\"vertical\"\r\n                      data={[\r\n                        {\r\n                          id: \"y\",\r\n                          label: \"Yes\",\r\n                        },\r\n                        {\r\n                          id: \"n\",\r\n                          label: \"No\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"Job Employment\"\r\n                      name=\"employment\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"House Income\"\r\n                      name=\"house_income\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"number\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"House Status\"\r\n                      name=\"house_status\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} sm={6} item>\r\n                    <FormikInputField\r\n                      label=\"House Ownership\"\r\n                      name=\"house_ownership\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                  >\r\n                    Add Resident\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/resident`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddResidentAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ResidentApi from \"../Api/ResidentApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ResidentModel } from \"../Models/ResidentModels\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { ResidentReducerTypes } from \"../Types/ResidentTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setResidentDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ResidentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_resident_data_table\",\r\n      fetch_resident_data_table: true,\r\n    });\r\n    const response: IServerResponse = await ResidentApi.getResidentDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetch_resident_data_table\",\r\n      fetch_resident_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_resident_data_table\",\r\n        resident_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSingleResidentAction = (resident_pk: string) => async (\r\n  dispatch: Dispatch<ResidentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_selected_resident\",\r\n      fetch_selected_resident: true,\r\n    });\r\n    const response: IServerResponse = await ResidentApi.getSingleResident(\r\n      resident_pk\r\n    );\r\n    dispatch({\r\n      type: \"fetch_selected_resident\",\r\n      fetch_selected_resident: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_resident\",\r\n        selected_resident: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addResidentAction = (\r\n  payload: ResidentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ResidentReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ResidentApi.addResidentApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateResidentAction = (\r\n  payload: ResidentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ResidentReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ResidentApi.updateResidentApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setResidentDataTableAction } from \"../../../Services/Actions/ResidentActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ResidentModel } from \"../../../Services/Models/ResidentModels\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableResidentAdminInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Alphabetical Asc\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Alphabetical Desc\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Profile\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Purok\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n\r\n  {\r\n    label: \"Status\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableResidentAdminView: FC<DataTableResidentAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.ResidentReducer.fetch_resident_data_table\r\n    );\r\n    const data_table: Array<ResidentModel> = useSelector(\r\n      (store: RootStore) => store.ResidentReducer.resident_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setResidentDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/resident\",\r\n              title: \"Residents\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/resident/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Resident\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              variant=\"rounded\"\r\n                              src={`${row.pic}`}\r\n                              errorMessage={`${row.first_name?.charAt(\r\n                                0\r\n                              )}${row.last_name?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/resident/${row.resident_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.first_name} {row.middle_name}{\" \"}\r\n                                {row.last_name} {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">\r\n                              {row.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.purok}</TableCell>\r\n\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.phone}</TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            style={{\r\n                              backgroundColor: row.sts_backgroundColor,\r\n                              color: row.sts_color,\r\n                            }}\r\n                            label={row.sts_desc}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableResidentAdminView;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AddBrgyOfficialAdminView from \"../Views/AdminViews/BrgyOfficialAdminView/AddBrgyOfficialAdminView\";\r\nimport DataTableBrgyOfficialAdminView from \"../Views/AdminViews/BrgyOfficialAdminView/DataTableBrgyOfficialAdminView\";\r\nimport AddCoAdminView from \"../Views/AdminViews/CoAdminView/AddCoAdminView\";\r\nimport DataTableCoAdminView from \"../Views/AdminViews/CoAdminView/DataTableCoAdminView\";\r\nimport DtNewsAdminView from \"../Views/AdminViews/NewsAdminView/DtNewsAdminView\";\r\nimport AddResidentAdminView from \"../Views/AdminViews/ResidentAdminView/AddResidentAdminView\";\r\nimport DataTableResidentAdminView from \"../Views/AdminViews/ResidentAdminView/DataTableResidentAdminView\";\r\n\r\nconst SysAdminRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      {/* <Route path=\"/admin/dashboard\" exact>\r\n        <DashboardAdminView />\r\n      </Route> */}\r\n\r\n      <Route path=\"/admin/administrator\" exact>\r\n        <DataTableCoAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/administrator/add\" exact>\r\n        <AddCoAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/resident\" exact>\r\n        <DataTableResidentAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/resident/add\" exact>\r\n        <AddResidentAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/brgy-official\" exact>\r\n        <DataTableBrgyOfficialAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/brgy-official/add\" exact>\r\n        <AddBrgyOfficialAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/news\" exact>\r\n        <DtNewsAdminView />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SysAdminRoutes;\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IBody {\r\n  isOpenMobileHeader: boolean;\r\n}\r\nconst Body: React.FC<IBody> = memo(({ children, isOpenMobileHeader }) => {\r\n  const theme: any = useTheme();\r\n  const mobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  return (\r\n    <StyledBody\r\n      theme={theme}\r\n      className={clsx(\"\", {\r\n        \"expand-body\": mobile,\r\n      })}\r\n      style={{\r\n        marginLeft: mobile ? 0 : theme.sidebar.maxWidth,\r\n      }}\r\n    >\r\n      {children}\r\n    </StyledBody>\r\n  );\r\n});\r\nexport default Body;\r\nconst StyledBody = styled.main`\r\n  margin-top: ${(p) => p.theme.header.height}px !important;\r\n  transition: 0.2s margin-top ease-in-out;\r\n\r\n  &.expand-body {\r\n    margin-top: ${(p) => p.theme.header.height * 2}px !important;\r\n    transition: 0.2s margin-top ease-in-out;\r\n  }\r\n\r\n  .page-container {\r\n    background-color: #fff !important;\r\n    min-height: calc(100vh - ${(p) => p.theme.header.height + 40}px) !important;\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMessage = styled.div``;\r\n\r\nexport const StyledMessagePopOver = styled.div`\r\n  width: 360px;\r\n\r\n  .content-header {\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    grid-gap: 0.5em;\r\n    padding: 1em;\r\n    color: #fff;\r\n\r\n    background-color: ${(p) => p.theme.header.backgroundColor};\r\n    color: ${(p) => p.theme.header.color};\r\n    .title {\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1em;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 600;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Badge, IconButton, Popover, useTheme } from \"@material-ui/core\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport React from \"react\";\r\nimport { StyledMessage, StyledMessagePopOver } from \"./styles\";\r\n\r\nconst Message = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledMessage>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <Badge badgeContent={0} showZero={true} color=\"secondary\">\r\n          <MessageIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledMessagePopOver theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <div className=\"title\">Messages</div>\r\n            <div className=\"subtitle\">\r\n              You have <strong>21</strong> unread messages\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n          </div>\r\n        </StyledMessagePopOver>\r\n      </Popover>\r\n    </StyledMessage>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNotification = styled.div``;\r\n\r\nexport const StyledNotificationPopOver = styled.div`\r\n  width: 360px;\r\n\r\n  .content-header {\r\n    overflow: hidden;\r\n    background-color: ${(p) => p.theme.header.backgroundColor};\r\n    color: ${(p) => p.theme.header.color};\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    grid-gap: 0.5em;\r\n    padding: 1em;\r\n    .title {\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1em;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 600;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Badge, IconButton, Popover, useTheme } from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport React from \"react\";\r\nimport { StyledNotification, StyledNotificationPopOver } from \"./styles\";\r\n\r\nconst Notification = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledNotification>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <Badge badgeContent={0} showZero={true} color=\"secondary\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledNotificationPopOver theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <div className=\"title\">Notifications</div>\r\n            <div className=\"subtitle\">\r\n              You have <strong>21</strong> unread notifacations\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n          </div>\r\n        </StyledNotificationPopOver>\r\n      </Popover>\r\n    </StyledNotification>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { Breadcrumbs, useTheme } from \"@material-ui/core\";\r\nimport React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\ninterface ILink {\r\n  link: string;\r\n  title: string;\r\n}\r\n\r\ninterface IPageLinks {\r\n  links: Array<ILink>;\r\n  isOpenMobileHeader?: boolean;\r\n}\r\n\r\nconst PageLinks: FC<IPageLinks> = ({ links, isOpenMobileHeader }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <StyledPageLinks\r\n      theme={theme}\r\n      // className={clsx(\"\", {\r\n      //   \"expand-navlinks\": isOpenMobileHeader,\r\n      // })}\r\n    >\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className=\"bread-crumb\">\r\n        {links.map((v, i) => (\r\n          <Link key={i} color=\"inherit\" to={v.link} className=\"navText\">\r\n            {v.title}\r\n          </Link>\r\n        ))}\r\n      </Breadcrumbs>\r\n    </StyledPageLinks>\r\n  );\r\n};\r\n\r\nexport default PageLinks;\r\n\r\nconst StyledPageLinks = styled.div`\r\n  /* margin-top: 0.5em; */\r\n  background-color: ${(p) => p.theme.header.backgroundColor};\r\n  display: grid !important;\r\n  align-content: center !important;\r\n  align-items: center !important;\r\n  align-self: center !important;\r\n  border: none !important;\r\n  box-shadow: none !important;\r\n  transition: 0.2s margin-top ease-in-out !important;\r\n\r\n  .bread-crumb {\r\n    .navText {\r\n      text-decoration: none !important;\r\n      font-weight: 900 !important;\r\n      font-family: \"Nunito\" !important;\r\n      font-size: 0.93em !important;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTaskMenu = styled.div``;\r\n\r\nexport const StyledTaskMenuPopOver = styled.div`\r\n  width: 150px;\r\n\r\n  .buttons {\r\n    padding: 0.3em;\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n\r\n    text-align: left;\r\n    .MuiButton-label {\r\n      justify-content: flex-start !important;\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Badge,\r\n  Button,\r\n  IconButton,\r\n  Popover,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport SettingsApplicationsRoundedIcon from \"@material-ui/icons/SettingsApplicationsRounded\";\r\nimport React, { memo } from \"react\";\r\nimport { removeToken } from \"../../Helpers/AppConfig\";\r\nimport { StyledTaskMenu, StyledTaskMenuPopOver } from \"./styles\";\r\n\r\nconst SettingMenu = memo(() => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledTaskMenu>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        color=\"default\"\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <SettingsApplicationsRoundedIcon />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledTaskMenuPopOver theme={theme} className=\"content-container\">\r\n          <div className=\"buttons\">\r\n            <Button color=\"primary\">My Profile</Button>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                removeToken();\r\n                window.location.href = \"/login\";\r\n              }}\r\n            >\r\n              Sign Out\r\n            </Button>\r\n          </div>\r\n        </StyledTaskMenuPopOver>\r\n      </Popover>\r\n    </StyledTaskMenu>\r\n  );\r\n});\r\n\r\nexport default SettingMenu;\r\n","import { AppBar, IconButton, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"../../Component/Message/Message\";\r\nimport Notification from \"../../Component/Notification/Notification\";\r\nimport PageLinks from \"../../Component/PageLinks\";\r\nimport SettingMenu from \"../../Component/SettingMenu/SettingMenu\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\n\r\ninterface IHeader {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileHeader: boolean;\r\n  isOpenMobileSidebar: boolean;\r\n  handleToggleHeader: () => void;\r\n  handleToggleSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = memo(\r\n  ({\r\n    PageNavLinks,\r\n    isOpenMobileHeader,\r\n    handleToggleHeader,\r\n    handleToggleSidebar,\r\n    isOpenMobileSidebar,\r\n    user,\r\n  }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    // const history = useHistory();\r\n\r\n    const page_links = useSelector(\r\n      (store: RootStore) => store.PageReducer.page_links\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <StyledHeader\r\n          theme={theme}\r\n          className={clsx(\"\", {\r\n            \"mobile-menu-open\": isOpenMobileHeader,\r\n          })}\r\n        >\r\n          {mobile && (\r\n            <IconButton\r\n              className=\"btn-open-drawer\"\r\n              onClick={handleToggleSidebar}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n\r\n          <div className=\"page-links\">\r\n            <PageLinks links={page_links} />\r\n          </div>\r\n\r\n          <section className=\"tools\">\r\n            <Notification />\r\n            <Message />\r\n            <SettingMenu />\r\n          </section>\r\n        </StyledHeader>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Header;\r\n\r\nconst StyledHeader = styled(AppBar)`\r\n  /*  */\r\n  /* grid-gap: 1em !important; */\r\n\r\n  display: grid !important;\r\n  height: ${(p) => p.theme.header.height}px !important;\r\n  align-items: center !important;\r\n  align-content: center !important;\r\n  grid-template-areas: \"links tools\";\r\n  padding-left: ${(p) => p.theme.sidebar.maxWidth + 10}px !important;\r\n  padding-right: 10px !important;\r\n  background: ${(p) => p.theme.header.backgroundColor} !important;\r\n  box-shadow: none !important;\r\n  border: none !important;\r\n  color: ${(p) => p.theme.header.color} !important;\r\n  grid-auto-rows: ${(p) => p.theme.header.height}px;\r\n\r\n  .btn-open-drawer {\r\n    grid-area: btn-sidebar;\r\n    justify-self: end;\r\n    display: grid;\r\n    justify-content: center;\r\n    align-content: center;\r\n  }\r\n\r\n  .page-links {\r\n    grid-area: links;\r\n  }\r\n\r\n  .tools {\r\n    grid-area: tools;\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n  }\r\n\r\n  /* MOBILE SCREEN */\r\n  @media screen and (max-width: ${(props) =>\r\n      props.theme.breakpoints.values.lg}px) {\r\n    padding: 0 10px !important;\r\n    grid-template-areas: \"btn-sidebar tools\" \"links links\";\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px\r\n      ${(p) => p.theme.header.height}px;\r\n    height: ${(p) => p.theme.header.height * 2}px !important;\r\n    grid-auto-columns: auto 1fr !important;\r\n    align-items: center;\r\n    align-content: center;\r\n  }\r\n`;\r\n","import { Collapse } from \"@material-ui/core\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled, { useTheme } from \"styled-components\";\r\n\r\ninterface INavSidebarDropDown {\r\n  isActive: boolean;\r\n  text: string;\r\n  navLinks: Array<any>;\r\n}\r\n\r\nconst NavSidebarDropDown: FC<INavSidebarDropDown> = ({\r\n  isActive,\r\n  text,\r\n  navLinks,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledNavSidebarDropdown\r\n      theme={theme}\r\n      className={clsx(\"nav-item-collapse\", {\r\n        \"dropdown-link-item-active\": isActive,\r\n      })}\r\n    >\r\n      <div className=\"header\" onClick={() => setOpen((prev) => !prev)}>\r\n        <div className=\"nav-item-label\">{text}</div>\r\n        <ArrowDropDownRoundedIcon className=\"nav-item-btn\" color=\"primary\" />\r\n      </div>\r\n      <Collapse in={open}>\r\n        <div className=\"body\">\r\n          {navLinks.map((link, index) => (\r\n            <NavLink\r\n              className=\"sub-link\"\r\n              activeClassName=\"nav-item-active\"\r\n              to={link.to}\r\n              key={index}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n    </StyledNavSidebarDropdown>\r\n  );\r\n};\r\n\r\nconst StyledNavSidebarDropdown = styled.div`\r\n  &.dropdown-link-item-active {\r\n    color: #3443e5 !important;\r\n    .nav-item-icon,\r\n    .nav-item-label {\r\n      color: #3443e5 !important;\r\n    }\r\n  }\r\n  .header {\r\n    transition: 0.2s all ease-in-out;\r\n    padding: 0.7em 0.3em;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    grid-auto-columns: 30px 1fr 50px;\r\n    justify-items: start;\r\n    grid-template-areas: \"text collapse\";\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n    align-content: center;\r\n    display: grid;\r\n    font-weight: 500;\r\n    grid-gap: 0.5em;\r\n    color: rgba(0, 0, 0, 0.7);\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: #3443e5 !important;\r\n    }\r\n\r\n    .nav-item-label {\r\n      grid-area: text;\r\n      font-size: 0.87em !important;\r\n    }\r\n    .nav-item-btn {\r\n      justify-self: end;\r\n      grid-area: collapse;\r\n      transition: 0.2s all ease-in-out;\r\n      border-radius: 50%;\r\n      &:hover {\r\n        cursor: pointer;\r\n        transition: 0.2s all ease-in-out;\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .body {\r\n    border-left: 2px solid #97b7fc;\r\n    padding-left: 35px;\r\n    margin-left: 12px;\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-gap: 0.5em;\r\n    font-size: 0.87em;\r\n\r\n    .sub-link {\r\n      padding: 0.5em 0;\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      &:hover {\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n    .nav-item-active {\r\n      color: #3443e5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavSidebarDropDown;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledUserProfile = styled.div`\r\n  .header {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    /* grid-template-areas: \"image\" \"user\"; */\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-items: center;\r\n    text-align: center;\r\n    grid-gap: 0.5em;\r\n    color: ${(p) => p.theme.sidebar.color} !important;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n\r\n      .profile-image,\r\n      .icon {\r\n        transition: 0.3s all ease-in-out;\r\n      }\r\n    }\r\n    .profile-image {\r\n      height: 3.5em !important;\r\n      width: 3.5em !important;\r\n      img {\r\n        /* margin: 0.5em; */\r\n      }\r\n    }\r\n\r\n    .user {\r\n      display: grid;\r\n      grid-gap: 0.3em;\r\n      .fullname {\r\n        font-size: 0.87em;\r\n        font-weight: 600;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        text-transform: capitalize;\r\n        font-weight: 900;\r\n      }\r\n      .designation {\r\n        font-size: 0.77em;\r\n        text-transform: capitalize;\r\n      }\r\n    }\r\n  }\r\n\r\n  .MuiPopover-root {\r\n    background-color: red !important;\r\n    & > .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n    &.content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n\r\n    .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledPopOverContent = styled.div`\r\n  max-width: 360px;\r\n  min-width: 250px;\r\n  .content-header {\r\n    overflow: hidden;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    align-content: center;\r\n    justify-content: start;\r\n    align-items: center;\r\n    justify-items: start;\r\n    grid-gap: 1em;\r\n    padding: 1em;\r\n    grid-auto-columns: 50px 1fr 100px;\r\n    background-color: #e2f3f5;\r\n\r\n    .content-header-image {\r\n      height: 50px;\r\n      width: 50px;\r\n    }\r\n    .content-header-user {\r\n      font-size: 0.8em;\r\n      text-transform: capitalize;\r\n\r\n      .name {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n\r\n    .btn-logout {\r\n      color: black;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 900;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useTheme } from \"@material-ui/core\";\r\nimport React, { memo, useCallback } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { removeToken } from \"../../Helpers/AppConfig\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\nimport { StyledUserProfile } from \"./styles\";\r\n\r\ninterface IUserProfile {\r\n  variant?: \"mobile\" | \"desktop\";\r\n  user: any;\r\n}\r\n\r\nconst UserProfile: React.FC<IUserProfile> = memo(({ variant, user }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    removeToken();\r\n    window.location.href = \"/login\";\r\n  }, []);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  let ProfileLink;\r\n\r\n  if (user?.user_type === \"admin\") {\r\n    ProfileLink = (\r\n      <NavLink to=\"/admin/profile\" className=\"link\">\r\n        My Profile\r\n      </NavLink>\r\n    );\r\n  } else if (user?.user_type === \"tutor\") {\r\n    ProfileLink = (\r\n      <NavLink to=\"/clinic/myprofile\" className=\"link\">\r\n        My Profile\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledUserProfile theme={theme}>\r\n      <div className=\"header\" aria-describedby={id} onClick={handleClick}>\r\n        <CustomAvatar\r\n          src={user?.picture}\r\n          errorMessage={`${user?.full_name.charAt(0)}`}\r\n          className=\"profile-image\"\r\n        />\r\n\r\n        {variant === \"mobile\" ? null : (\r\n          <div className=\"user\">\r\n            <div className=\"fullname\">{user?.full_name}</div>\r\n            <div className=\"designation\">{user?.user_type}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/*       \r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledPopOverContent theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <CustomAvatar\r\n              src={user?.picture}\r\n              errorMessage={`${user?.full_name.charAt(0)}`}\r\n              className=\"content-header-image\"\r\n            />\r\n            <div className=\"content-header-user\">\r\n              <div className=\"name\">{user?.full_name}</div>\r\n              <div className=\"designation\">{user?.user_type}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n            <div className=\"content-items\">\r\n              {ProfileLink}\r\n              <div className=\"link\" onClick={handleLogout}>\r\n                Logout\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </StyledPopOverContent>\r\n      </Popover>\r\n    */}\r\n    </StyledUserProfile>\r\n  );\r\n});\r\n\r\nexport default UserProfile;\r\n","import {\r\n  Avatar,\r\n  Drawer,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport React, { memo, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport logo from \"../../Assets/Images/Logo/logo.jpg\";\r\nimport NavSidebarDropDown from \"../../Component/NavLinks/NavSidebarDropDown\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\nimport styled from \"styled-components\";\r\nimport UserProfile from \"../../Component/UserProfile/UserProfile\";\r\ninterface IMobileSidebar {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileSidebar: boolean;\r\n  handleCloseMobileSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst MobileSidebar: React.FC<IMobileSidebar> = memo(\r\n  ({ PageNavLinks, isOpenMobileSidebar, handleCloseMobileSidebar, user }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (mounted) {\r\n        handleCloseMobileSidebar();\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [handleCloseMobileSidebar, mobile]);\r\n\r\n    return (\r\n      <StyledMobileSidebar\r\n        theme={theme}\r\n        variant={mobile ? \"temporary\" : \"permanent\"}\r\n        open={mobile ? isOpenMobileSidebar : true}\r\n        PaperProps={{\r\n          className: \"sidebar-container\",\r\n        }}\r\n        onClose={handleCloseMobileSidebar}\r\n      >\r\n        <div className=\"brand\">\r\n          <Avatar src={logo} className=\"brand-logo\" alt=\"\" />\r\n          <div className=\"brand-name\">{process.env.REACT_APP_CLIENT}</div>\r\n          <div className=\"app-name\">{APP_NAME}</div>\r\n\r\n          {mobile && (\r\n            <IconButton\r\n              className=\"btn-close-drawer\"\r\n              color=\"primary\"\r\n              onClick={handleCloseMobileSidebar}\r\n            >\r\n              <MenuOpenIcon />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user\">\r\n          <UserProfile user={user} />\r\n        </div>\r\n\r\n        <nav className=\"nav\">\r\n          {PageNavLinks.map((nav, index) =>\r\n            nav.hasSubLinks ? (\r\n              <NavSidebarDropDown\r\n                isActive={history.location.pathname\r\n                  .toLowerCase()\r\n                  .includes(nav.parentKey ? nav.parentKey.toLowerCase() : \"\")}\r\n                text={nav.text}\r\n                navLinks={nav.navLinks ? nav.navLinks : []}\r\n                key={index}\r\n              />\r\n            ) : (\r\n              <NavLink\r\n                key={index}\r\n                activeClassName=\"dropdown-link-item-active\"\r\n                to={nav.to}\r\n                className=\"nav-item\"\r\n              >\r\n                <div className=\"nav-item-label\">{nav.text}</div>\r\n              </NavLink>\r\n            )\r\n          )}\r\n        </nav>\r\n      </StyledMobileSidebar>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MobileSidebar;\r\n\r\nexport const StyledMobileSidebar = styled(Drawer)`\r\n  .sidebar-container {\r\n    width: ${(p) => p.theme.sidebar.maxWidth}px!important;\r\n    max-width: ${(p) => p.theme.sidebar.maxWidth}px!important;\r\n    overflow-x: hidden !important;\r\n    overflow-y: auto !important;\r\n    display: grid;\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px auto 1fr;\r\n    background-color: ${(p) => p.theme.sidebar.backgroundColor} !important;\r\n    color: ${(p) => p.theme.sidebar.color} !important;\r\n    grid-gap: 1em;\r\n    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2) !important;\r\n    .brand {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n      align-content: center;\r\n      align-items: center;\r\n      justify-items: start;\r\n      justify-content: start;\r\n      grid-gap: 0.5em;\r\n      padding: 0 0.5em;\r\n      grid-template-areas: \"logo app icon\" \"logo name icon\";\r\n      grid-auto-columns: 40px 1fr 40px;\r\n\r\n      .brand-logo {\r\n        grid-area: logo;\r\n        height: 40px;\r\n        width: 40px;\r\n        box-shadow: 0 10px 25px -8px rgba(0, 0, 0, 0.56),\r\n          0 2px 15px 0px rgba(0, 0, 0, 0.12), 0 4px 8px -3px rgba(0, 0, 0, 0.2);\r\n      }\r\n      .app-name {\r\n        align-self: end;\r\n        justify-self: center;\r\n        grid-area: app;\r\n        white-space: nowrap;\r\n        justify-self: start;\r\n        font-weight: 900;\r\n        white-space: pre-wrap;\r\n        font-size: 0.9em;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .brand-name {\r\n        grid-area: name;\r\n        font-weight: 600;\r\n        font-size: 0.87em;\r\n        align-self: start;\r\n        white-space: pre-wrap;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .btn-close-drawer {\r\n        justify-self: end;\r\n        grid-area: icon;\r\n      }\r\n    }\r\n\r\n    .nav {\r\n      width: 100%;\r\n      display: grid;\r\n      grid-auto-flow: row;\r\n      align-items: start;\r\n      align-content: start;\r\n      padding: 1em 2em !important;\r\n      grid-gap: 0.5em;\r\n      text-transform: uppercase;\r\n\r\n      .nav-item {\r\n        transition: 0.2s all ease-in-out;\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        align-items: center;\r\n        align-content: center;\r\n        grid-gap: 0.5em;\r\n        padding: 0.4em 0.5em;\r\n        width: 100%;\r\n        justify-items: start;\r\n        font-weight: 900 !important;\r\n        text-transform: capitalize;\r\n        font-size: 0.9em;\r\n        color: ${(p) => p.theme.sidebar.color} !important;\r\n\r\n        .nav-item-label {\r\n          font-size: 0.87em !important;\r\n          text-transform: capitalize;\r\n          font-family: Nunito !important;\r\n        }\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n          color: ${(p) => p.theme.palette.secondary.main} !important;\r\n        }\r\n\r\n        &.dropdown-link-item-active {\r\n          color: ${(p) => p.theme.palette.secondary.main} !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport Body from \"./Body\";\r\nimport Header from \"./Header\";\r\nimport MobileSidebar from \"./MobileSidebar\";\r\n\r\nexport interface IPageNavLinks {\r\n  hasSubLinks: boolean;\r\n  text: string;\r\n  to: string;\r\n  parentKey?: string;\r\n  navLinks?: Array<any>;\r\n}\r\n\r\nconst generateNavLinks = (user: any): Array<IPageNavLinks> => {\r\n  if (!user) {\r\n    return [];\r\n  }\r\n\r\n  let PageNavLinks: Array<IPageNavLinks> = [];\r\n\r\n  if (user.user_type === \"admin\") {\r\n    // PageNavLinks.push({\r\n    //   hasSubLinks: false,\r\n    //   text: page.pagename,\r\n    //   to: page.link,\r\n    // });\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/admin/dashboard\",\r\n        text: \"Dashboard\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/resident\",\r\n        text: \"Residents\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/brgy-official\",\r\n        text: \"Brgy. Officials\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/news\",\r\n        text: \"News\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/complaint\",\r\n        text: \"Complaints\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/administrator\",\r\n        text: \"Administrators\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  } else if (user?.user_type === \"tutor\") {\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/tutor/calendar\",\r\n        text: \"Calendar\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/tutor/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  // if (user?.user_info.usertype === \"admin\") {\r\n\r\n  // } else if (user === \"clinic\") {\r\n  // } else if (user === \"students\") {\r\n  // }\r\n\r\n  return PageNavLinks;\r\n};\r\n\r\nconst Layout = memo(({ children }) => {\r\n  const user = useSelector((reducers: RootStore) => reducers.UserReducer.user);\r\n\r\n  console.log(`user`, user);\r\n\r\n  const [isOpenMobileHeader, setIsOpenMobileHeader] = useState(false);\r\n\r\n  const handleToggleHeader = useCallback(() => {\r\n    setIsOpenMobileHeader((prevHeader) => !prevHeader);\r\n  }, []);\r\n\r\n  const [isOpenMobileSidebar, setIsOpenMobileSidebar] = useState(false);\r\n\r\n  const handleCloseMobileSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar(false);\r\n  }, []);\r\n\r\n  const handleToggleSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar((prevSidebar) => !prevSidebar);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileHeader={isOpenMobileHeader}\r\n        handleToggleHeader={handleToggleHeader}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        user={user}\r\n      />\r\n      <MobileSidebar\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        handleCloseMobileSidebar={handleCloseMobileSidebar}\r\n        user={user}\r\n      />\r\n      <Body isOpenMobileHeader={isOpenMobileHeader}>{children}</Body>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Layout;\r\n","import React, { memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PageLoader from \"../Component/PageLoader\";\r\nimport PagePrompt from \"../Component/PagePrompt\";\r\nimport PageSnackbar from \"../Component/PageSnackbar\";\r\nimport PageSuccessPrompt from \"../Component/PageSuccessPrompt\";\r\nimport { SetCurrentUserAction } from \"../Services/Actions/UserActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport LoginPortal from \"../Views/LoginPortal/LoginPortal\";\r\nimport SysAdminRoutes from \"./AdminRoutes\";\r\nimport Layout from \"./Layout/Layout\";\r\n\r\nconst Routes = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getUserInfo = async () => {\r\n      dispatch(SetCurrentUserAction());\r\n    };\r\n\r\n    mounted && getUserInfo();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <PageLoader />\r\n        <PagePrompt />\r\n        <PageSnackbar />\r\n        <PageSuccessPrompt />\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={LoginPortal} />\r\n          <Route path=\"/\" exact component={LoginPortal} />\r\n          <Layout>{user?.user_type === \"admin\" && <SysAdminRoutes />}</Layout>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n});\r\nexport default Routes;\r\n","export type UserActionTypes =\r\n  | {\r\n      type: \"SET_CURRENT_USER\";\r\n      user: string;\r\n    }\r\n  | {\r\n      type: \"SET_LOADING_USER\";\r\n      isLoading: boolean;\r\n    };\r\n\r\nexport interface IUserReducer {\r\n  user: any;\r\n  userLoading: boolean;\r\n}\r\n\r\nconst defaultState: IUserReducer = {\r\n  user: null,\r\n  userLoading: false,\r\n};\r\n\r\nconst UserReducer = (\r\n  state: IUserReducer = defaultState,\r\n  action: UserActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_USER\": {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    }\r\n\r\n    case \"SET_LOADING_USER\": {\r\n      return {\r\n        ...state,\r\n        userLoading: action.isLoading,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import { PageReducerModel, PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst defaultState: PageReducerModel = {\r\n  page_prompt: {\r\n    open: false,\r\n    custom_title: null,\r\n    custom_subtitle: null,\r\n    continue_callback: null,\r\n    close_callback: null,\r\n  },\r\n  page_loading: {\r\n    show: false,\r\n  },\r\n  page_snackbar: {\r\n    message: null,\r\n  },\r\n  page_links: [],\r\n};\r\n\r\nconst PageReducer = (\r\n  state: PageReducerModel = defaultState,\r\n  action: PageReducerTypes\r\n): PageReducerModel => {\r\n  switch (action.type) {\r\n    case \"SET_PAGE_PROMPT\":\r\n      return { ...state, page_prompt: action.page_prompt };\r\n    case \"SET_PAGE_LOADING\":\r\n      return { ...state, page_loading: action.page_loading };\r\n    case \"SET_PAGE_SNACKBAR\":\r\n      return { ...state, page_snackbar: action.page_snackbar };\r\n\r\n    case \"SET_PAGE_LINKS\":\r\n      return { ...state, page_links: action.page_links };\r\n\r\n    case \"SET_PAGE_SUCCESS_PROMPT\":\r\n      return { ...state, page_success_prompt: action.page_success_prompt };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PageReducer;\r\n","import { AdminReducerModel, AdminReducerTypes } from \"../Types/AdminTypes\";\r\n\r\nconst defaultState: AdminReducerModel = {\r\n  fetching_admin_data_table: false,\r\n  fetching_selected_admin: false,\r\n};\r\n\r\nconst AdminReducer = (\r\n  state: AdminReducerModel = defaultState,\r\n  action: AdminReducerTypes\r\n): AdminReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        admin_data_table: action.admin_data_table,\r\n      };\r\n    }\r\n    case \"fetching_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_admin_data_table: action.fetching_admin_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        selected_admin: action.selected_admin,\r\n      };\r\n    }\r\n    case \"fetching_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_admin: action.fetching_selected_admin,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import {\r\n  ResidentReducerModel,\r\n  ResidentReducerTypes,\r\n} from \"../Types/ResidentTypes\";\r\n\r\nconst defaultState: ResidentReducerModel = {\r\n  fetch_resident_data_table: false,\r\n  fetching_selected_resident: false,\r\n};\r\n\r\nconst ResidentReducer = (\r\n  state: ResidentReducerModel = defaultState,\r\n  action: ResidentReducerTypes\r\n): ResidentReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_resident_data_table\": {\r\n      return {\r\n        ...state,\r\n        resident_data_table: action.resident_data_table,\r\n      };\r\n    }\r\n    case \"fetch_resident_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_resident_data_table: action.fetch_resident_data_table,\r\n      };\r\n    }\r\n\r\n    case \"set_selected_resident\": {\r\n      return {\r\n        ...state,\r\n        selected_resident: action.selected_resident,\r\n      };\r\n    }\r\n    case \"fetch_selected_resident\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_resident: action.fetch_selected_resident,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ResidentReducer;\r\n","import {\r\n  BrgyOfficialReducerModel,\r\n  BrgyOfficialReducerTypes,\r\n} from \"../Types/BrgyOfficialTypes\";\r\n\r\nconst defaultState: BrgyOfficialReducerModel = {\r\n  fetching_brgy_official_data_table: false,\r\n  fetching_selected_brgy_official: false,\r\n};\r\n\r\nconst BrgyOfficialReducer = (\r\n  state: BrgyOfficialReducerModel = defaultState,\r\n  action: BrgyOfficialReducerTypes\r\n): BrgyOfficialReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_brgy_official_data_table\": {\r\n      return {\r\n        ...state,\r\n        brgy_official_data_table: action.brgy_official_data_table,\r\n      };\r\n    }\r\n    case \"fetching_brgy_official_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_brgy_official_data_table:\r\n          action.fetching_brgy_official_data_table,\r\n      };\r\n    }\r\n\r\n    case \"set_selected_brgy_official\": {\r\n      return {\r\n        ...state,\r\n        selected_brgy_official: action.selected_brgy_official,\r\n      };\r\n    }\r\n    case \"fetching_selected_brgy_official\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_brgy_official: action.fetching_selected_brgy_official,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BrgyOfficialReducer;\r\n","import { NewsReducerModel, NewsReducerTypes } from \"../Types/NewsTypes\";\r\n\r\nconst defaultState: NewsReducerModel = {};\r\n\r\nconst NewsReducer = (\r\n  state: NewsReducerModel = defaultState,\r\n  action: NewsReducerTypes\r\n): NewsReducerModel => {\r\n  switch (action.type) {\r\n    case \"news_table\": {\r\n      return {\r\n        ...state,\r\n        news_table: action.news_table,\r\n      };\r\n    }\r\n    case \"fetch_news_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_news_table: action.fetch_news_table,\r\n      };\r\n    }\r\n\r\n    case \"single_news\": {\r\n      return {\r\n        ...state,\r\n        single_news: action.single_news,\r\n      };\r\n    }\r\n    case \"fetch_single_news\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_news: action.fetch_single_news,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default NewsReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport UserReducer from \"./UserReducer\";\r\nimport PageReducer from \"./PageReducer\";\r\nimport AdminReducer from \"./AdminReducer\";\r\nimport ResidentReducer from \"./ResidentReducer\";\r\nimport BrgyOfficialReducer from \"./BrgyOfficialReducer\";\r\nimport NewsReducer from \"./NewsReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  UserReducer,\r\n  PageReducer,\r\n  AdminReducer,\r\n  ResidentReducer,\r\n  BrgyOfficialReducer,\r\n  NewsReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst Store = createStore(RootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\n\r\nexport default Store;\r\n","import { Color } from \"@material-ui/core\";\r\nimport {\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\ninterface ThemeProp {\r\n  appbar: IAppBar;\r\n}\r\n\r\ninterface IAppBar {\r\n  bgColor: string;\r\n  color: string;\r\n  height: number;\r\n}\r\n\r\ninterface IBodyStyles {\r\n  backgroundColor: string;\r\n}\r\n\r\nexport interface StyledComponentTheme {\r\n  theme: Theme;\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface ThemeOptions {\r\n    header?: IHeader;\r\n    sidebar?: ISidebar;\r\n    body?: IBodyStyles;\r\n  }\r\n\r\n  interface IHeader {\r\n    height: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n    fontFamily: string;\r\n  }\r\n\r\n  interface ISidebar {\r\n    maxWidth: number;\r\n    minWidth: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n  }\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n  interface Palette {\r\n    blue: Color;\r\n    bg: Color;\r\n    // gray: Palette[\"primary\"];\r\n    // grey: Palette[\"primary\"],\r\n    // orange: Palette[\"primary\"],\r\n    // red: Palette[\"primary\"]\r\n  }\r\n\r\n  interface PaletteOptions {\r\n    blue?: PaletteOptions[\"primary\"];\r\n    // bg: PaletteOptions[\"primary\"];\r\n    // gray?: PaletteOptions[\"primary\"];\r\n  }\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff5959\",\r\n    },\r\n    secondary: {\r\n      main: \"#facf5a\",\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"unset\",\r\n      fontFamily: \"Nunito\",\r\n    },\r\n    fontFamily: [\r\n      \"Nunito\",\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n  header: {\r\n    backgroundColor: \"#fff\",\r\n    height: 65,\r\n    color: \"black\",\r\n    fontFamily: \"Nunito\",\r\n  },\r\n  sidebar: {\r\n    maxWidth: 270,\r\n    minWidth: 65,\r\n    backgroundColor: \"#492540\",\r\n    color: \"#fff\",\r\n  },\r\n  body: {\r\n    backgroundColor: \" #edfcff\",\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import { IconButton } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Routes from \"./Routes/Routes\";\nimport Store from \"./Services/Store\";\nimport \"./Styles/App.css\";\nimport \"./Styles/PageCustomize.css\";\nimport \"./Styles/Material.css\";\n\nimport theme from \"./Theme/MuiTheme\";\n\nconst App: React.FC = () => {\n  const notistackRef = React.createRef<SnackbarProvider>();\n  const onClickDismiss = (key: React.ReactText) => () => {\n    if (notistackRef.current) {\n      notistackRef.current.closeSnackbar(key);\n    }\n  };\n\n  console.log(`sdwdeqweewqeqwe`);\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          maxSnack={5}\n          autoHideDuration={null}\n          ref={notistackRef}\n          hideIconVariant\n          action={(event: React.ReactText) => (\n            <IconButton\n              style={{ backgroundColor: \"rgba(255,255,255,.8)\" }}\n              size=\"small\"\n              onClick={onClickDismiss(event)}\n            >\n              <CloseRoundedIcon color=\"error\" />\n            </IconButton>\n          )}\n        >\n          <Routes />\n        </SnackbarProvider>\n      </Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"typeface-roboto\";\nimport \"typeface-nunito\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}